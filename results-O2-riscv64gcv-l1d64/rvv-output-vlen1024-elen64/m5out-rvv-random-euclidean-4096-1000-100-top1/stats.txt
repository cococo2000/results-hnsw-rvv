
---------- Begin Simulation Statistics ----------
simSeconds                                   1.412985                       # Number of seconds simulated (Second)
simTicks                                 1412984653304                       # Number of ticks simulated (Tick)
finalTick                                1412984653304                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                  70238.87                       # Real time elapsed on the host (Second)
hostTickRate                                 20116849                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                   17308364                       # Number of bytes of host memory used (Byte)
simInsts                                   1691251796                       # Number of instructions simulated (Count)
simOps                                     1691479937                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                    24079                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                      24082                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data    442226870                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total    442226870                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data    442226870                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total    442226870                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data    368800184                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total    368800184                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data    368800184                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total    368800184                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data 30305739619906                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total 30305739619906                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data 30305739619906                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total 30305739619906                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data    811027054                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total    811027054                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data    811027054                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total    811027054                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.454732                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.454732                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.454732                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.454732                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 82173.873373                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 82173.873373                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 82173.873373                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 82173.873373                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs    937780247                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets         3589                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs    189491704                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets           62                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs     4.948925                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets    57.887097                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks     10235594                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total     10235594                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data    123994175                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total    123994175                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data    123994175                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total    123994175                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data    244806009                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total    244806009                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher      9667113                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data    244806009                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total    254473122                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data 18676901994944                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total 18676901994944                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 537203437435                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data 18676901994944                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total 19214105432379                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.301847                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.301847                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.301847                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.313767                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 76292.661570                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 76292.661570                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 55570.203579                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 76292.661570                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 75505.441523                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements    254484014                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher      9667113                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::total      9667113                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 537203437435                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::total 537203437435                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 55570.203579                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::total 55570.203579                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::processor.cores.core.data        18129                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::total        18129                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::processor.cores.core.data       174129                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::total       174129                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::processor.cores.core.data  12313513457                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::total  12313513457                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::processor.cores.core.data       192258                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::total       192258                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::processor.cores.core.data     0.905705                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::total     0.905705                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::processor.cores.core.data 70714.892160                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::total 70714.892160                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::processor.cores.core.data       162602                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::total       162602                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::processor.cores.core.data        11527                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::total        11527                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::processor.cores.core.data    319444671                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::total    319444671                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::processor.cores.core.data     0.059956                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::total     0.059956                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::processor.cores.core.data 27712.732801                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::total 27712.732801                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data    413016305                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total    413016305                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data    365644454                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total    365644454                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data 30165770990649                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total 30165770990649                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data    778660759                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total    778660759                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.469581                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.469581                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 82500.283159                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 82500.283159                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data    121328813                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total    121328813                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data    244315641                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total    244315641                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data 18664149262003                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total 18664149262003                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.313764                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.313764                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 76393.591444                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 76393.591444                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::processor.cores.core.data           20                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::total           20                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::processor.cores.core.data           20                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::total           20                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data         1628                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total         1628                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data          389                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total          389                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data     11866085                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total     11866085                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data         2017                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total         2017                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.192861                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.192861                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data 30504.074550                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total 30504.074550                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data          389                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total          389                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data      8625715                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total      8625715                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.192861                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.192861                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data 22174.074550                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total 22174.074550                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::processor.cores.core.data       135936                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::total       135936                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::processor.cores.core.data           66                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::total           66                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::processor.cores.core.data      2096613                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::total      2096613                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::processor.cores.core.data       136002                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::total       136002                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::processor.cores.core.data     0.000485                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::total     0.000485                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::processor.cores.core.data 31766.863636                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::total 31766.863636                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrHits::processor.cores.core.data            3                       # number of WriteLineReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrHits::total            3                       # number of WriteLineReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::processor.cores.core.data           63                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::total           63                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::processor.cores.core.data      1405223                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::total      1405223                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::processor.cores.core.data     0.000463                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::total     0.000463                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::processor.cores.core.data 22305.126984                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::total 22305.126984                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data     29074629                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total     29074629                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data      3155664                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total      3155664                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data 139966532644                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total 139966532644                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data     32230293                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total     32230293                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.097910                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.097910                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 44354.067050                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 44354.067050                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data      2665359                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total      2665359                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data       490305                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total       490305                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data  12751327718                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total  12751327718                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.015213                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.015213                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 26006.929805                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 26006.929805                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.prefetcher.demandMshrMisses    244806009                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIssued     16049416                       # number of hwpf issued (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUnused      4078303                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUseful       758426                       # number of useful prefetch (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1dcaches.prefetcher.accuracy     0.047256                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.coverage     0.003089                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInCache      3015200                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInMSHR      3367016                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInWB           87                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfLate      6382303                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIdentified    979614227                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfBufferHit    499024260                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedDemand    239655083                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedFull       754423                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfSpanPage     40996121                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulSpanPage       108077                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse  1023.968081                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs    696731685                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs    254485038                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs     2.737810                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       219079                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher    32.713959                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data   991.254122                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.031947                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.968022                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999969                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1022          293                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024          731                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::0          132                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::1          150                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::2           11                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0           96                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1          524                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::2          110                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::4            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1022     0.286133                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024     0.713867                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses   6744255830                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses   6744255830                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst     99692029                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total     99692029                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst     99692029                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total     99692029                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst        14620                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total        14620                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst        14620                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total        14620                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst    651613417                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total    651613417                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst    651613417                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total    651613417                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst     99706649                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total     99706649                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst     99706649                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total     99706649                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.000147                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.000147                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.000147                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.000147                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 44570.001163                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 44570.001163                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 44570.001163                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 44570.001163                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks        11387                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total        11387                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst         2721                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total         2721                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst         2721                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total         2721                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst        11899                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total        11899                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst        11899                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total        11899                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst    553017038                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total    553017038                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst    553017038                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total    553017038                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.000119                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.000119                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.000119                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.000119                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 46475.925540                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 46475.925540                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 46475.925540                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 46475.925540                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements        11387                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst     99692029                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total     99692029                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst        14620                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total        14620                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst    651613417                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total    651613417                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst     99706649                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total     99706649                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.000147                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.000147                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 44570.001163                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 44570.001163                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst         2721                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total         2721                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst        11899                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total        11899                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst    553017038                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total    553017038                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000119                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.000119                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 46475.925540                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 46475.925540                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.prefetcher.demandMshrMisses        11899                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1icaches.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   511.981703                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs     99703928                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs        11899                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs  8379.185478                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        76636                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   511.981703                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.999964                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.999964                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           88                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1           74                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::2            3                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4          347                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses    398838495                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses    398838495                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp    254006166                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackDirty     10931767                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean        11387                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::CleanEvict    381470610                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::HardPFReq    140045551                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadExReq       489944                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadExResp       489944                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq    254006166                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::InvalidateReq          827                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::InvalidateResp          827                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        35185                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port    763454089                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total    763489274                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port      1490304                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port  16942067456                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total  16943557760                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops          277963915                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic     44555136                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples    532541232                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean     0.000941                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev     0.030664                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0    532040035     99.91%     99.91% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1       501197      0.09%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total    532541232                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy 447260336626                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy     30174897                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer1.occupancy 635956837844                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer1.utilization          0.5                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests    509258925                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests    254681610                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests           44                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops       501151                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops       501151                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.l1dcaches.prefetcher      5397203                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst         6345                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.data    113563313                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total    118966861                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.l1dcaches.prefetcher      5397203                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst         6345                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.data    113563313                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total    118966861                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandMisses::cache_hierarchy.l1dcaches.prefetcher      4269909                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.inst         5554                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.data    131253786                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::total    135529249                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.overallMisses::cache_hierarchy.l1dcaches.prefetcher      4269909                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.inst         5554                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.data    131253786                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::total    135529249                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.demandMissLatency::cache_hierarchy.l1dcaches.prefetcher 370830361651                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.inst    418448385                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.data 14205652119509                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::total 14576900929545                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::cache_hierarchy.l1dcaches.prefetcher 370830361651                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.inst    418448385                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.data 14205652119509                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::total 14576900929545                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.l1dcaches.prefetcher      9667112                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst        11899                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.data    244817099                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total    254496110                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.l1dcaches.prefetcher      9667112                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst        11899                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.data    244817099                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total    254496110                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandMissRate::cache_hierarchy.l1dcaches.prefetcher     0.441694                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.inst     0.466762                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.data     0.536130                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::total     0.532540                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::cache_hierarchy.l1dcaches.prefetcher     0.441694                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.inst     0.466762                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.data     0.536130                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::total     0.532540                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMissLatency::cache_hierarchy.l1dcaches.prefetcher 86847.368797                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.inst 75341.805005                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.data 108230.417974                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::total 107555.387764                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::cache_hierarchy.l1dcaches.prefetcher 86847.368797                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.inst 75341.805005                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.data 108230.417974                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::total 107555.387764                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs      6778253                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs      1408765                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs     4.811486                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.writebacks::writebacks       696174                       # number of writebacks (Count)
board.cache_hierarchy.l2cache.writebacks::total       696174                       # number of writebacks (Count)
board.cache_hierarchy.l2cache.demandMshrHits::cache_hierarchy.l1dcaches.prefetcher      4056518                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::processor.cores.core.data    121427786                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::total    125484304                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::cache_hierarchy.l1dcaches.prefetcher      4056518                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::processor.cores.core.data    121427786                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::total    125484304                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::cache_hierarchy.l1dcaches.prefetcher       213391                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.inst         5554                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.data      9826000                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::total     10044945                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher       213391                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.l2cache.prefetcher    127897881                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.inst         5554                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.data      9826000                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::total    137942826                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  26251494918                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.inst    413821903                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.data 1154015796729                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::total 1180681113550                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  26251494918                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.l2cache.prefetcher 15708682228861                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.inst    413821903                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.data 1154015796729                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::total 16889363342411                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.022074                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.inst     0.466762                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.data     0.040136                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::total     0.039470                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.022074                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.l2cache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.inst     0.466762                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.data     0.040136                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::total     0.542023                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 123020.628415                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 74508.805005                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 117445.124845                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::total 117539.828595                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 123020.628415                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.l2cache.prefetcher 122822.067935                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 74508.805005                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 117445.124845                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::total 122437.417241                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.replacements    137918364                       # number of replacements (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMisses::writebacks       254424                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMisses::total       254424                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMissRate::writebacks          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.l2cache.CleanEvict.mshrMissRate::total          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.mshrMisses::cache_hierarchy.l2cache.prefetcher    127897881                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMisses::total    127897881                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissLatency::cache_hierarchy.l2cache.prefetcher 15708682228861                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissLatency::total 15708682228861                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissRate::cache_hierarchy.l2cache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2cache.prefetcher 122822.067935                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.HardPFReq.avgMshrMissLatency::total 122822.067935                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.hits::processor.cores.core.data          696                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.hits::total          696                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::cache_hierarchy.l1dcaches.prefetcher            1                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::processor.cores.core.data          130                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::total          131                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::processor.cores.core.data      2052512                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::total      2052512                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::cache_hierarchy.l1dcaches.prefetcher            1                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::processor.cores.core.data          826                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::total          827                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::cache_hierarchy.l1dcaches.prefetcher            1                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::processor.cores.core.data     0.157385                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::total     0.158404                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::processor.cores.core.data 15788.553846                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::total 15668.030534                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::processor.cores.core.data           30                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::total           30                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher            1                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::processor.cores.core.data          100                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::total          101                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher        17493                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::processor.cores.core.data      1611854                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::total      1629347                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher            1                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::processor.cores.core.data     0.121065                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::total     0.122128                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher        17493                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::processor.cores.core.data 16118.540000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::total 16132.148515                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.hits::cache_hierarchy.l1dcaches.prefetcher            4                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.hits::processor.cores.core.data       433174                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.hits::total       433178                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::cache_hierarchy.l1dcaches.prefetcher            3                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::processor.cores.core.data        56763                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::total        56766                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::cache_hierarchy.l1dcaches.prefetcher       191589                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::processor.cores.core.data   3999598685                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::total   3999790274                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.accesses::cache_hierarchy.l1dcaches.prefetcher            7                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.accesses::processor.cores.core.data       489937                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.accesses::total       489944                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.missRate::cache_hierarchy.l1dcaches.prefetcher     0.428571                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.missRate::processor.cores.core.data     0.115858                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.missRate::total     0.115862                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher        63863                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::processor.cores.core.data 70461.368938                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::total 70461.020223                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher            2                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::processor.cores.core.data         2127                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::total         2129                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher            1                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::processor.cores.core.data        54636                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::total        54637                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher        81633                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::processor.cores.core.data   3857595512                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::total   3857677145                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.142857                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.111516                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::total     0.111517                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher        81633                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 70605.379457                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::total 70605.581291                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.l1dcaches.prefetcher      5397199                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst         6345                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.data    113130139                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total    118533683                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::cache_hierarchy.l1dcaches.prefetcher      4269906                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.inst         5554                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.data    131197023                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::total    135472483                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::cache_hierarchy.l1dcaches.prefetcher 370830170062                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.inst    418448385                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.data 14201652520824                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::total 14572901139271                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.l1dcaches.prefetcher      9667105                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst        11899                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.data    244327162                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total    254006166                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::cache_hierarchy.l1dcaches.prefetcher     0.441694                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.inst     0.466762                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.data     0.536973                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::total     0.533343                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher 86847.384945                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 75341.805005                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 108246.758929                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::total 107570.931133                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher      4056516                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::processor.cores.core.data    121425659                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::total    125482175                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher       213390                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.inst         5554                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data      9771364                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::total      9990308                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  26251413285                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst    413821903                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data 1150158201217                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::total 1176823436405                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.022074                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.466762                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.039993                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::total     0.039331                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 123020.822367                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 74508.805005                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 117707.026493                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::total 117796.512020                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks        11387                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total        11387                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks        11387                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total        11387                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::writebacks     10235593                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::total     10235593                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::writebacks     10235593                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::total     10235593                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses     10044945                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued    248861310                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUnused      1216656                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful      1192718                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy     0.004793                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage     0.106136                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache      2984477                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR    117978916                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB           36                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate    120963429                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified    496171850                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit    199913530                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand     29996357                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage     20190602                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage       192895                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse 32758.697940                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs    511147483                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs    137951857                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs     3.705260                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick        74970                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::writebacks     8.206039                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher    86.135040                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher 30113.981526                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst     2.513139                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data  2547.862196                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::writebacks     0.000250                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.002629                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.919006                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.000077                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.077755                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.999716                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022        28801                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024         3967                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0          134                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1          321                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::2        28346                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::0          236                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          727                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::2         2983                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::3           15                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::4            6                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.878937                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.121063                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses   8281828545                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses   8281828545                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp    137884357                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty       696174                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict    137209740                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq        54637                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp        54637                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq    137884357                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq          102                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port    413784004                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::total    413784004                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total    413784004                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port   8872650752                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::total   8872650752                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total   8872650752                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples    137939096                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0    137939096    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total    137939096                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy 324741574478                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy 305289934999                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests    275845124                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests    137906073                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            833                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples    690272.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l1dcaches.prefetcher::samples    247899.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2cache.prefetcher::samples 127642605.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples      5554.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples   9979925.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.030035717612                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds        39135                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds        39135                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState      146686215                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState        655073                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs              137938994                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                696174                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts            137938994                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts              696174                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ             63011                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             5902                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                 11.17                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 58.57                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                  114                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6        137938994                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6          696174                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0             940878                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1             620338                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2             534232                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3             547769                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4             586196                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5             641174                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6             734293                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7            1681536                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8            1431567                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9            6020037                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10           5860755                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11          11349282                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12          72026729                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13           7934712                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14           7490683                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15           7641837                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16           6180912                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17           5624400                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18             24275                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19              4378                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::32                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::33                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::34                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::35                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::36                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::37                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::38                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::39                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::40                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::41                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::42                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::43                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::44                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::45                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::46                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::47                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::48                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::49                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::50                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::51                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::52                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::53                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::54                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::55                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::56                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::57                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::58                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::59                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::60                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::61                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::62                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::63                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47              5714                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48              6018                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49             13895                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50             17968                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51             20355                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52             22263                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53             23770                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54             25275                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55             26611                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56             27859                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57             29269                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58             30202                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59             31357                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60             31771                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61             32705                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62             33408                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63             33927                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::64             34051                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::65             21868                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::66             17694                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::67             15329                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::68             13381                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::69             12114                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::70             10644                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::71              9594                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::72              8898                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::73              8151                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::74              7418                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::75              6793                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::76              6251                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::77              5715                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::78              5186                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::79              4869                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::80              4489                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::81              4278                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::82              3908                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::83              3691                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::84              3438                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::85              3258                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::86              3076                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::87              2863                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::88              2727                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::89              2595                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::90              2498                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::91              2432                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::92              2264                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::93              2151                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::94              2051                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::95              1987                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::96              2026                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::97              1911                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::98              2056                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::99              2131                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::100             2113                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::101             2092                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::102             2277                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::103             2428                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::104             2560                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::105             2780                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::106             3003                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::107             3393                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::108             3779                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::109             3387                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::110             1667                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::111             1420                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::112              867                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::113              806                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::114              540                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::115              380                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::116              102                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::117               51                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::118               47                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::119               41                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::120               32                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::121               27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::122               31                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::123               27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::124               27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::125               28                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::126               31                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::127              136                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples        39135                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  3522.222486                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  6597.737509                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-8191        33594     85.84%     85.84% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::8192-16383         4001     10.22%     96.06% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16384-24575         1169      2.99%     99.05% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24576-32767          302      0.77%     99.82% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::32768-40959           35      0.09%     99.91% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::40960-49151            4      0.01%     99.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::49152-57343            3      0.01%     99.93% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::57344-65535            1      0.00%     99.93% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::65536-73727            2      0.01%     99.94% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::73728-81919            1      0.00%     99.94% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::81920-90111            3      0.01%     99.95% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::90112-98303            1      0.00%     99.95% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::114688-122879            1      0.00%     99.95% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::122880-131071            2      0.01%     99.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::131072-139263            1      0.00%     99.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::139264-147455            2      0.01%     99.97% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::147456-155647            3      0.01%     99.97% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::155648-163839            2      0.01%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::172032-180223            1      0.00%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::180224-188415            2      0.01%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::188416-196607            3      0.01%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::245760-253951            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::311296-319487            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total        39135                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples        39135                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    17.636642                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    17.198573                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     5.360789                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16        31237     79.82%     79.82% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::17          223      0.57%     80.39% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::18         2035      5.20%     85.59% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::19         1051      2.69%     88.27% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::20          637      1.63%     89.90% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::21          486      1.24%     91.14% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::22          369      0.94%     92.09% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::23          380      0.97%     93.06% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::24          342      0.87%     93.93% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::25          244      0.62%     94.55% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::26          219      0.56%     95.11% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::27          259      0.66%     95.78% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::28          193      0.49%     96.27% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::29          169      0.43%     96.70% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::30          146      0.37%     97.07% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::31          124      0.32%     97.39% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::32          114      0.29%     97.68% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::33           78      0.20%     97.88% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::34           81      0.21%     98.09% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::35           68      0.17%     98.26% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::36           61      0.16%     98.42% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::37           48      0.12%     98.54% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::38           38      0.10%     98.64% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::39           42      0.11%     98.75% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::40           32      0.08%     98.83% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::41           28      0.07%     98.90% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::42           38      0.10%     99.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::43           22      0.06%     99.05% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::44           21      0.05%     99.11% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::45           17      0.04%     99.15% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::46           25      0.06%     99.21% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::47           29      0.07%     99.29% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::48           14      0.04%     99.32% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::49           17      0.04%     99.37% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::50           11      0.03%     99.39% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::51           18      0.05%     99.44% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::52            7      0.02%     99.46% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::53            5      0.01%     99.47% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::54           14      0.04%     99.51% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::55           11      0.03%     99.53% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::56           14      0.04%     99.57% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::57           11      0.03%     99.60% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::58            6      0.02%     99.61% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::59            9      0.02%     99.64% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::60            9      0.02%     99.66% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::61            5      0.01%     99.67% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::62            6      0.02%     99.69% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::63            6      0.02%     99.70% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::64            9      0.02%     99.73% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::65           10      0.03%     99.75% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::66            8      0.02%     99.77% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::67            8      0.02%     99.79% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::68           10      0.03%     99.82% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::69            8      0.02%     99.84% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::70            8      0.02%     99.86% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::71           10      0.03%     99.89% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::72            6      0.02%     99.90% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::73            7      0.02%     99.92% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::74            5      0.01%     99.93% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::75            7      0.02%     99.95% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::76            3      0.01%     99.96% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::77            4      0.01%     99.97% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::78            4      0.01%     99.98% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::79            3      0.01%     99.98% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::80            1      0.00%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::84            1      0.00%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::91            1      0.00%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::93            1      0.00%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::96            1      0.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::111            1      0.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total        39135                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ            4032704                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys         8828095616                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys        44555136                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         6247835456.21472359                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         31532639.71821361                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap             1412984594994                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 10192.11                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l1dcaches.prefetcher     15865536                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2cache.prefetcher   8169126720                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst       355456                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data    638715200                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks     44173440                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l1dcaches.prefetcher 11228385.221949448809                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2cache.prefetcher 5781468822.678312301636                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 251563.949522617040                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 452032651.951657176018                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 31262505.149442836642                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l1dcaches.prefetcher       251983                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2cache.prefetcher    127663603                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst         5554                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data     10017854                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks       696174                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l1dcaches.prefetcher  16805483692                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2cache.prefetcher 11919058224679                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst    201067353                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data 773517322299                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks 79390539040228                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l1dcaches.prefetcher     66692.93                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2cache.prefetcher     93363.01                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     36202.26                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     77213.87                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks 114038356.85                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l1dcaches.prefetcher     16126912                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2cache.prefetcher   8170470592                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst       355456                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data    641142656                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total   8828095616                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst       355456                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       355456                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks     44555136                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total     44555136                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l1dcaches.prefetcher       251983                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2cache.prefetcher    127663603                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst         5554                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data     10017854                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total    137938994                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks       696174                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total       696174                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l1dcaches.prefetcher     11413367                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2cache.prefetcher   5782419910                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst       251564                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data    453750615                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   6247835456                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst       251564                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total       251564                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks     31532640                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     31532640                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks     31532640                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l1dcaches.prefetcher     11413367                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2cache.prefetcher   5782419910                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst       251564                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data    453750615                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   6279368096                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts       137875983                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts         690210                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0      4274709                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1      4241367                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2      4408227                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3      4410507                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4      4354273                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5      4264061                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6      4270445                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7      4377122                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8      4449494                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9      4121748                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10      3997223                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11      4213982                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12      4230708                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13      4253787                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14      4516471                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15      4378687                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::16      4359579                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::17      4216687                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::18      4260756                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::19      4328002                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::20      4373552                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::21      4352484                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::22      4235936                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::23      4184871                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::24      4466260                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::25      4486428                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::26      4366892                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::27      4360574                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::28      4261732                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::29      4318981                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::30      4341856                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::31      4198582                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0         9704                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1         9779                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2         9895                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3        12808                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4        10247                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5         9847                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6        11561                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7        14889                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8        27243                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9        17160                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10        24096                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11        20545                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12        18906                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13         9850                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14        17613                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15        16626                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::16        80234                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::17        69238                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::18        76485                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::19        41138                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::20        12864                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::21        24900                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::22         9854                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::23         9860                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::24         9791                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::25        20602                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::26         9847                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::27         9789                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::28        30666                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::29         9659                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::30        16733                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::31        17781                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat       10297855403387                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat     459402775356                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat  12709582098023                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           74689.26                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      92181.26                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits      128330377                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits        562451                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.08                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        81.49                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples      9673355                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   916.769286                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   816.194597                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   265.381457                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127       349624      3.61%      3.61% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255       309365      3.20%      6.81% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383       183701      1.90%      8.71% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511       165809      1.71%     10.43% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639       177360      1.83%     12.26% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767       164636      1.70%     13.96% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895       157310      1.63%     15.59% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023       172840      1.79%     17.37% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151      7992710     82.63%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total      9673355                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead   8824062912                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten     44173440                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        6244.981424                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          31.262505                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              32.68                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          32.51                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.16                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          93.02                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy 7443962023.680967                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy 13141434010.924044                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy 188609679322.646912                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy 567987554.063990                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 122654940997.368240                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy 491097620128.633118                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy 122166331257.088135                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy 945681955294.314819                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   669.279707                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE 363067211008                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF  63518350000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT 986399092296                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy 7640451196.561055                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy 13488329491.206209                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy 189570685350.419403                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy 1060256487.696208                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 122654940997.368240                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy 504209487474.935181                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy 113114483748.966827                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy 951738634747.084961                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   673.566151                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE 336136640643                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF  63518350000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT 1013329662661                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles       1696260090                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.002961                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.997047                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded      1955269149                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded       572908                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued     2476457118                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued      1644316                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined    264362119                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined    152640917                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved       560302                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples   1696086826                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.460100                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.713795                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0    667234839     39.34%     39.34% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1    414725770     24.45%     63.79% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2    243007215     14.33%     78.12% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3    114871876      6.77%     84.89% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4    127064256      7.49%     92.38% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5     79156689      4.67%     97.05% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6     30225568      1.78%     98.83% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7     12697491      0.75%     99.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8      7103122      0.42%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total   1696086826                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu      1135649      2.31%      2.31% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult           23      0.00%      2.31% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv          163      0.00%      2.31% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd           22      0.00%      2.31% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp       134895      0.27%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt          128      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult           38      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc          966      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc          451      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc          139      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      2.58% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd         8083      0.02%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult         1594      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd          218      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      2.60% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead      2863610      5.82%      8.42% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite       551801      1.12%      9.54% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead       158424      0.32%      9.86% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite        28963      0.06%      9.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%      9.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%      9.92% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad     44294635     89.95%     99.87% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore        62135      0.13%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig           30      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass        13085      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu    885430945     35.75%     35.75% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult      2663017      0.11%     35.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv         4342      0.00%     35.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd    118253426      4.78%     40.64% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp     10094905      0.41%     41.04% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt      1704764      0.07%     41.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult         3153      0.00%     41.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc         9452      0.00%     41.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv         1014      0.00%     41.11% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc      4191015      0.17%     41.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     41.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd           23      0.00%     41.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     41.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     41.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     41.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     41.28% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc    119649225      4.83%     46.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult           23      0.00%     46.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     46.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     46.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     46.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     46.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     46.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     46.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd    118265449      4.78%     50.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     50.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     50.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     50.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     50.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     50.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult    118263439      4.78%     55.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     55.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     55.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     55.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     55.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     55.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     55.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd    118256654      4.78%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     60.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead     60014055      2.42%     62.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite     30518994      1.23%     64.10% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead     18835635      0.76%     64.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite     14829792      0.60%     65.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%     65.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%     65.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad    849906490     34.32%     99.78% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore      1437405      0.06%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%     99.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig      4110816      0.17%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total   2476457118                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.459951                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy            49241967                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.019884                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads   3658311479                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites   1244749606                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses    963433690                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads    572692872                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites    347714117                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses    283300034                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads   2468882994                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites    627889323                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses    599919255                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses    983182599                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses    286502199                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses   1256001202                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts     10137639                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            5593                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles          173264                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads    329984974                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     59777230                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads     10059661                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores     20449667                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return      4950878      2.03%      2.03% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect      4290287      1.76%      3.79% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect      2083451      0.86%      4.65% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond    218256807     89.63%     94.28% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond     10314291      4.24%     98.51% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     98.51% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond      3619212      1.49%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total    243514926                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return      2254600      2.83%      2.83% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect      2516440      3.16%      5.98% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect      1161014      1.46%      7.44% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond     65056460     81.59%     89.03% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond      7001002      8.78%     97.81% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     97.81% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond      1749208      2.19%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total     79738724                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return        12259      0.08%      0.08% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect        42653      0.29%      0.37% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect         5797      0.04%      0.41% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond     14566935     99.24%     99.66% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond        49998      0.34%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond          250      0.00%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total     14677892                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return      2696277      1.65%      1.65% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect      1773847      1.08%      2.73% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect       922435      0.56%      3.29% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond    153200336     93.54%     96.84% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond      3313289      2.02%     98.86% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     98.86% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond      1870004      1.14%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total    163776188                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return         7634      0.10%      0.10% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect        11639      0.16%      0.26% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect         4005      0.05%      0.31% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond      7433051     99.49%     99.80% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond        14536      0.19%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond          199      0.00%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total      7471064                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget     34044137     13.98%     13.98% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB    198874216     81.67%     95.65% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS      4950878      2.03%     97.68% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect      5645695      2.32%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total    243514926                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch      1707812     11.73%     11.73% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return     12846804     88.26%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect          564      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            1      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total     14555181                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted    218256807                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken    186061565                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect     14677892                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss        45143                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted     11060413                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted      3617479                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups    243514926                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates     11042107                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits    217964868                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.895078                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted        53412                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups      5702663                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits      5645695                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses        56968                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return      4950878      2.03%      2.03% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect      4290287      1.76%      3.79% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect      2083451      0.86%      4.65% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond    218256807     89.63%     94.28% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond     10314291      4.24%     98.51% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     98.51% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond      3619212      1.49%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total    243514926                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return      4939751     19.33%     19.33% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect       130534      0.51%     19.84% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect      2083427      8.15%     28.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond     14727212     57.64%     85.64% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond        49922      0.20%     85.83% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     85.83% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond      3619212     14.17%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total     25550058                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect        42653      0.39%      0.39% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      0.39% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond     10949456     99.16%     99.55% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond        49998      0.45%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total     11042107                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect        42653      0.39%      0.39% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      0.39% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond     10949456     99.16%     99.55% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond        49998      0.45%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total     11042107                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups      5702663                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits      5645695                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses        56968                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords         6047                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords      5708710                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows           10                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes      8628338                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops      8628332                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes      5932054                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used      2696277                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct      2688643                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect         7634                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts    264407588                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls        12606                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts      9890341                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples   1653551602                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.022937                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.962005                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0    974820553     58.95%     58.95% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1    439547673     26.58%     85.54% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2     16408407      0.99%     86.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3     61171409      3.70%     90.23% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4     15713672      0.95%     91.18% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5     58644288      3.55%     94.72% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      7596827      0.46%     95.18% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7      3246051      0.20%     95.38% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8     76402722      4.62%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total   1653551602                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars        10485                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls      2696282                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass        10522      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu    764994737     45.23%     45.23% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult      1861722      0.11%     45.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv         4092      0.00%     45.34% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd    118029113      6.98%     52.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp      8122998      0.48%     52.80% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt      1162233      0.07%     52.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult         3133      0.00%     52.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc         9442      0.00%     52.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv         1012      0.00%     52.86% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc      3062442      0.18%     53.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     53.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd           23      0.00%     53.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     53.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     53.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     53.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     53.05% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc    118950269      7.03%     60.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult           21      0.00%     60.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     60.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     60.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     60.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     60.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     60.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     60.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd    118023040      6.98%     67.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     67.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     67.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     67.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     67.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     67.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult    118023040      6.98%     74.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     74.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     74.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     74.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     74.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     74.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     74.03% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd    118023040      6.98%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     81.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead     37369340      2.21%     83.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite     20927980      1.24%     84.46% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead     12884744      0.76%     85.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite      9756528      0.58%     85.80% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%     85.80% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%     85.80% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad    236175307     13.96%     99.76% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore      1296640      0.08%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%     99.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig      2788519      0.16%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total   1691479937                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples     76402722                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts   1691251796                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps   1691479937                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP   1691251796                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP   1691479937                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.002961                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.997047                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs    318410539                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts    271054685                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts    858587046                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts    286427374                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     31981148                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts    713279899                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass        10522      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu    764994737     45.23%     45.23% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult      1861722      0.11%     45.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv         4092      0.00%     45.34% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd    118029113      6.98%     52.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp      8122998      0.48%     52.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt      1162233      0.07%     52.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult         3133      0.00%     52.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc         9442      0.00%     52.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv         1012      0.00%     52.86% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc      3062442      0.18%     53.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     53.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd           23      0.00%     53.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     53.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     53.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     53.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     53.05% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc    118950269      7.03%     60.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult           21      0.00%     60.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     60.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     60.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     60.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     60.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     60.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     60.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd    118023040      6.98%     67.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     67.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     67.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     67.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     67.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     67.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult    118023040      6.98%     74.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     74.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     74.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     74.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     74.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     74.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     74.03% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd    118023040      6.98%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     81.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead     37369340      2.21%     83.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite     20927980      1.24%     84.46% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead     12884744      0.76%     85.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite      9756528      0.58%     85.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%     85.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%     85.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad    236175307     13.96%     99.76% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore      1296640      0.08%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%     99.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig      2788519      0.16%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total   1691479937                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl    163776188                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl    158287472                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl      5488716                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl    153200336                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl     10575852                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall      2696282                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn      2696277                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles     91581376                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles   1300247792                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles    111757336                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles    182520529                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles      9979793                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved    181005135                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred      5068206                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts   2055718548                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts     29408425                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts   2466319479                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches    186505020                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts    925646468                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     45101975                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.453975                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numFpRegReads    279575349                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites    259646031                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads   2434155587                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites    768472265                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs    970748443                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads   3417170413                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites   1459036595                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads    829254913                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites    594580278                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches    209470789                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles    1669056225                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles     29539534                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles         2898                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles        15968                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.cacheLines     99706649                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         8387                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples   1696086826                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.332369                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     2.616800                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0   1276172139     75.24%     75.24% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1     27437711      1.62%     76.86% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2     32513412      1.92%     78.78% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3     21760605      1.28%     80.06% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4    131836187      7.77%     87.83% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5     10553133      0.62%     88.45% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6     17390420      1.03%     89.48% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7      9772223      0.58%     90.06% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8    168650996      9.94%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total   1696086826                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts   2258553880                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.331490                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches    243514926                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.143560                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles     12241968                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles      9979793                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles    345534853                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles     20928265                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts   1955842057                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts     10640278                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts    329984974                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     59777230                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts       324237                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents      6512657                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents      5337629                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents       152971                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect      8548127                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect      2081030                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts     10629157                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit   1848947595                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount   1846652979                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst   1105551589                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst   1374811649                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.088661                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.804148                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads      5343968                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads     43557600                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses        41171                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation       152971                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores     27794065                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads         1732                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache    182790813                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples    286427374                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean    61.345758                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    77.141330                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9    110336567     38.52%     38.52% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19     22106903      7.72%     46.24% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29     11473147      4.01%     50.25% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39      4868534      1.70%     51.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49      2570763      0.90%     52.84% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59     49867543     17.41%     70.25% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69      5158397      1.80%     72.05% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79      6263055      2.19%     74.24% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89      3692773      1.29%     75.53% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99      1660579      0.58%     76.11% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109      1595909      0.56%     76.67% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119      1334821      0.47%     77.13% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129      2882250      1.01%     78.14% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139      1809472      0.63%     78.77% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149      3804168      1.33%     80.10% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159      8207274      2.87%     82.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169     25822308      9.02%     91.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179      1942292      0.68%     92.66% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189      1461017      0.51%     93.17% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199     12943383      4.52%     97.69% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209      2239372      0.78%     98.47% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219      1246168      0.44%     98.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229       734478      0.26%     99.16% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239       241604      0.08%     99.24% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249       170979      0.06%     99.30% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259        89039      0.03%     99.34% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269        52267      0.02%     99.35% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279        43113      0.02%     99.37% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289        33952      0.01%     99.38% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299        29730      0.01%     99.39% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows      1745517      0.61%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value         1578                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total    286427374                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.dtb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.dtb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.itb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.itb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 1412984653304                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles      9979793                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles    158391368                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles    699710943                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles     20543606                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles    217492669                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles    589968447                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts   2012932850                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents      7378211                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents    537297057                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents     19897754                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents      5845483                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands   1747400709                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups   3175259562                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups   1994796954                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups    311137755                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.vecLookups    848353540                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps   1501374587                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps    246026122                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing       402598                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing       427640                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts    990393073                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads       3532974746                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes      3954625141                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts   1691251796                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps   1691479937                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls           47                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
