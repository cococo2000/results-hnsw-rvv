
---------- Begin Simulation Statistics ----------
simSeconds                                   1.143236                       # Number of seconds simulated (Second)
simTicks                                 1143236299156                       # Number of ticks simulated (Tick)
finalTick                                1143236299156                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                  23153.32                       # Real time elapsed on the host (Second)
hostTickRate                                 49376784                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                   17204376                       # Number of bytes of host memory used (Byte)
simInsts                                   1546542182                       # Number of instructions simulated (Count)
simOps                                     1546714367                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                    66796                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                      66803                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data    352011554                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total    352011554                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data    352011554                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total    352011554                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data    301242623                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total    301242623                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data    301242623                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total    301242623                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data 23475559659704                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total 23475559659704                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data 23475559659704                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total 23475559659704                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data    653254177                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total    653254177                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data    653254177                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total    653254177                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.461142                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.461142                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.461142                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.461142                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 77929.077320                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 77929.077320                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 77929.077320                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 77929.077320                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs    642165350                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets           41                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs    119910720                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets            2                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs     5.355362                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets    20.500000                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks     13691514                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total     13691514                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data    123650747                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total    123650747                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data    123650747                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total    123650747                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data    177591876                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total    177591876                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher     30997125                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data    177591876                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total    208589001                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data 13450114421105                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total 13450114421105                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 1427497524821                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data 13450114421105                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total 14877611945926                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.271857                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.271857                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.271857                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.319308                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 75736.090659                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 75736.090659                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 46052.578258                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 75736.090659                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 71325.006950                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements    208589904                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher     30997125                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::total     30997125                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 1427497524821                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::total 1427497524821                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 46052.578258                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::total 46052.578258                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::processor.cores.core.data         3591                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::total         3591                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::processor.cores.core.data       100913                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::total       100913                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::processor.cores.core.data   8070941998                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::total   8070941998                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::processor.cores.core.data       104504                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::total       104504                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::processor.cores.core.data     0.965638                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::total     0.965638                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::processor.cores.core.data 79979.209795                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::total 79979.209795                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::processor.cores.core.data        99841                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::total        99841                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::processor.cores.core.data         1072                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::total         1072                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::processor.cores.core.data     28993398                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::total     28993398                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::processor.cores.core.data     0.010258                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::total     0.010258                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::processor.cores.core.data 27046.080224                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::total 27046.080224                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data    322966794                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total    322966794                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data    297770145                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total    297770145                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data 23338980594531                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total 23338980594531                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data    620736939                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total    620736939                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.479704                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.479704                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 78379.182690                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 78379.182690                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data    120865281                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total    120865281                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data    176904864                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total    176904864                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data 13433963232746                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total 13433963232746                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.284992                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.284992                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 75938.913883                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 75938.913883                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::processor.cores.core.data           20                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::total           20                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::processor.cores.core.data           20                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::total           20                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data         1639                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total         1639                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data          400                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total          400                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data     13618717                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total     13618717                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data         2039                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total         2039                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.196175                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.196175                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data 34046.792500                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total 34046.792500                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data          400                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total          400                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data     10286717                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total     10286717                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.196175                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.196175                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data 25716.792500                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total 25716.792500                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::processor.cores.core.data       101952                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::total       101952                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::processor.cores.core.data           66                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::total           66                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::processor.cores.core.data      2156588                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::total      2156588                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::processor.cores.core.data       102018                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::total       102018                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::processor.cores.core.data     0.000647                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::total     0.000647                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::processor.cores.core.data 32675.575758                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::total 32675.575758                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrHits::processor.cores.core.data            3                       # number of WriteLineReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrHits::total            3                       # number of WriteLineReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::processor.cores.core.data           63                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::total           63                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::processor.cores.core.data      1481025                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::total      1481025                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::processor.cores.core.data     0.000618                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::total     0.000618                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::processor.cores.core.data 23508.333333                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::total 23508.333333                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data     28942808                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total     28942808                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data      3472412                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total      3472412                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data 136576908585                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total 136576908585                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data     32415220                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total     32415220                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.107123                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.107123                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 39331.999943                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 39331.999943                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data      2785463                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total      2785463                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data       686949                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total       686949                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data  16149707334                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total  16149707334                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.021192                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.021192                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 23509.325050                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 23509.325050                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.prefetcher.demandMshrMisses    177591876                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIssued     38068483                       # number of hwpf issued (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUnused      4495483                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUseful       813541                       # number of useful prefetch (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1dcaches.prefetcher.accuracy     0.021370                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.coverage     0.004560                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInCache      2137330                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInMSHR      4933918                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInWB          110                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfLate      7071358                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIdentified    726391047                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfBufferHit    355415150                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedDemand    162808414                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedFull       415093                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfSpanPage     29422573                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulSpanPage       120652                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse   511.991006                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs    560607313                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs    208590416                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs     2.687599                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       219079                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher    41.465167                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data   470.525839                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.080987                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.918996                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999982                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1022          266                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024          246                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::0          151                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::1          115                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0          118                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1          116                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::2           12                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1022     0.519531                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024     0.480469                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses   5435476336                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses   5435476336                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst    101612246                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total    101612246                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst    101612246                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total    101612246                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst         3108                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total         3108                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst         3108                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total         3108                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst    182753536                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total    182753536                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst    182753536                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total    182753536                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst    101615354                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total    101615354                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst    101615354                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total    101615354                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.000031                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.000031                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.000031                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.000031                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 58801.009009                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 58801.009009                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 58801.009009                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 58801.009009                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks         1677                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total         1677                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst          862                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total          862                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst          862                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total          862                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst         2246                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total         2246                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst         2246                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total         2246                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst    138178040                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total    138178040                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst    138178040                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total    138178040                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.000022                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.000022                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.000022                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.000022                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 61521.834372                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 61521.834372                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 61521.834372                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 61521.834372                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements         1677                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst    101612246                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total    101612246                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst         3108                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total         3108                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst    182753536                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total    182753536                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst    101615354                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total    101615354                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.000031                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.000031                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 58801.009009                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 58801.009009                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst          862                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total          862                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst         2246                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total         2246                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst    138178040                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total    138178040                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000022                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.000022                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 61521.834372                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 61521.834372                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.prefetcher.demandMshrMisses         2246                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1icaches.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   510.167760                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs    101614492                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs         2246                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs 45242.427427                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        76636                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   510.167760                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.996421                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.996421                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           90                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1           69                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::2           20                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4          333                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses    406463662                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses    406463662                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp    207905288                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackDirty     14276923                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean         1677                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::CleanEvict    300027372                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::HardPFReq    109493454                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::UpgradeReq           57                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::UpgradeResp           57                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadExReq       686515                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadExResp       686515                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq    207905288                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::InvalidateReq          859                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::InvalidateResp          859                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         6112                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port    625770850                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total    625776962                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port       247424                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port  14225988544                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total  14226235968                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops          215207902                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic     37469824                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples    423874449                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean     0.001210                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev     0.034782                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0    423362056     99.88%     99.88% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1       512056      0.12%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2          337      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            2                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total    423874449                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy 392226168679                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy      5626898                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer1.occupancy 521266065971                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer1.utilization          0.5                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests    417427333                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests    208760443                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests       134124                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops       378555                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops       378218                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops          337                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.l1dcaches.prefetcher     24228004                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst          325                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.data     80891821                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total    105120150                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.l1dcaches.prefetcher     24228004                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst          325                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.data     80891821                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total    105120150                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandMisses::cache_hierarchy.l1dcaches.prefetcher      6769121                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.inst         1864                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.data     96700611                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::total    103471596                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.overallMisses::cache_hierarchy.l1dcaches.prefetcher      6769121                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.inst         1864                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.data     96700611                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::total    103471596                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.demandMissLatency::cache_hierarchy.l1dcaches.prefetcher 605357030932                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.inst    128197867                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.data 10393270064031                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::total 10998755292830                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::cache_hierarchy.l1dcaches.prefetcher 605357030932                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.inst    128197867                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.data 10393270064031                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::total 10998755292830                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.l1dcaches.prefetcher     30997125                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst         2189                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.data    177592432                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total    208591746                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.l1dcaches.prefetcher     30997125                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst         2189                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.data    177592432                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total    208591746                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandMissRate::cache_hierarchy.l1dcaches.prefetcher     0.218379                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.inst     0.851530                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.data     0.544509                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::total     0.496048                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::cache_hierarchy.l1dcaches.prefetcher     0.218379                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.inst     0.851530                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.data     0.544509                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::total     0.496048                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMissLatency::cache_hierarchy.l1dcaches.prefetcher 89429.193382                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.inst 68775.679721                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.data 107478.845858                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::total 106297.338768                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::cache_hierarchy.l1dcaches.prefetcher 89429.193382                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.inst 68775.679721                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.data 107478.845858                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::total 106297.338768                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs      5997187                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs      1217491                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs     4.925857                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.writebacks::writebacks       585409                       # number of writebacks (Count)
board.cache_hierarchy.l2cache.writebacks::total       585409                       # number of writebacks (Count)
board.cache_hierarchy.l2cache.demandMshrHits::cache_hierarchy.l1dcaches.prefetcher      6284723                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::processor.cores.core.data     90848935                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::total     97133658                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::cache_hierarchy.l1dcaches.prefetcher      6284723                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::processor.cores.core.data     90848935                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::total     97133658                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::cache_hierarchy.l1dcaches.prefetcher       484398                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.inst         1864                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.data      5851676                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::total      6337938                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher       484398                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.l2cache.prefetcher     99406017                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.inst         1864                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.data      5851676                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::total    105743955                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  75740748755                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.inst    126645155                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.data 658865867388                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::total 734733261298                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  75740748755                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.l2cache.prefetcher 12156318975752                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.inst    126645155                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.data 658865867388                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::total 12891052237050                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.015627                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.inst     0.851530                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.data     0.032950                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::total     0.030384                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.015627                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.l2cache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.inst     0.851530                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.data     0.032950                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::total     0.506942                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 156360.572824                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 67942.679721                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 112594.386187                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::total 115926.230471                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 156360.572824                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.l2cache.prefetcher 122289.569008                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 67942.679721                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 112594.386187                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::total 121908.171839                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.replacements    105714391                       # number of replacements (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMisses::writebacks       156249                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMisses::total       156249                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMissRate::writebacks          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.l2cache.CleanEvict.mshrMissRate::total          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.mshrMisses::cache_hierarchy.l2cache.prefetcher     99406017                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMisses::total     99406017                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissLatency::cache_hierarchy.l2cache.prefetcher 12156318975752                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissLatency::total 12156318975752                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissRate::cache_hierarchy.l2cache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2cache.prefetcher 122289.569008                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.HardPFReq.avgMshrMissLatency::total 122289.569008                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.hits::processor.cores.core.data          749                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.hits::total          749                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::processor.cores.core.data          110                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::total          110                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::processor.cores.core.data      1896741                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::total      1896741                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::processor.cores.core.data          859                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::total          859                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::processor.cores.core.data     0.128056                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::total     0.128056                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::processor.cores.core.data 17243.100000                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::total 17243.100000                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::processor.cores.core.data           26                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::total           26                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::processor.cores.core.data           84                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::total           84                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::processor.cores.core.data      1341963                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::total      1341963                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::processor.cores.core.data     0.097788                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::total     0.097788                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::processor.cores.core.data 15975.750000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::total 15975.750000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.hits::cache_hierarchy.l1dcaches.prefetcher            3                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.hits::processor.cores.core.data       638197                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.hits::total       638200                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::cache_hierarchy.l1dcaches.prefetcher            3                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::processor.cores.core.data        48312                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::total        48315                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::cache_hierarchy.l1dcaches.prefetcher       167433                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::processor.cores.core.data   3259752244                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::total   3259919677                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.accesses::cache_hierarchy.l1dcaches.prefetcher            6                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.accesses::processor.cores.core.data       686509                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.accesses::total       686515                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.missRate::cache_hierarchy.l1dcaches.prefetcher     0.500000                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.missRate::processor.cores.core.data     0.070373                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.missRate::total     0.070377                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher        55811                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::processor.cores.core.data 67472.931032                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::total 67472.206913                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher            3                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::processor.cores.core.data         1605                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::total         1608                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::processor.cores.core.data        46707                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::total        46707                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::processor.cores.core.data   3152260260                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::total   3152260260                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.068036                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::total     0.068035                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 67490.103411                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::total 67490.103411                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.l1dcaches.prefetcher     24228001                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst          325                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.data     80253624                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total    104481950                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::cache_hierarchy.l1dcaches.prefetcher      6769118                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.inst         1864                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.data     96652299                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::total    103423281                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::cache_hierarchy.l1dcaches.prefetcher 605356863499                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.inst    128197867                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.data 10390010311787                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::total 10995495373153                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.l1dcaches.prefetcher     30997119                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst         2189                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.data    176905923                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total    207905231                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::cache_hierarchy.l1dcaches.prefetcher     0.218379                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.inst     0.851530                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.data     0.546349                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::total     0.497454                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher 89429.208281                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 68775.679721                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 107498.842959                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::total 106315.476234                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher      6284720                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::processor.cores.core.data     90847330                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::total     97132050                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher       484398                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.inst         1864                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data      5804969                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::total      6291231                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  75740748755                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst    126645155                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data 655713607128                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::total 731581001038                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.015627                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.851530                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.032814                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::total     0.030260                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 156360.572824                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 67942.679721                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 112957.296952                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::total 116285.827215                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.UpgradeReq.hits::processor.cores.core.data           57                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l2cache.UpgradeReq.hits::total           57                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l2cache.UpgradeReq.accesses::processor.cores.core.data           57                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.UpgradeReq.accesses::total           57                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks         1677                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total         1677                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks         1677                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total         1677                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::writebacks     13691514                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::total     13691514                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::writebacks     13691514                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::total     13691514                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses      6337938                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued    217491477                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUnused      1077640                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful      1192012                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy     0.005481                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage     0.158303                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache      3509613                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR    114575769                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB           78                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate    118085460                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified    391794860                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit    151076111                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand     13612276                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage     15819884                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage       195614                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse 32756.666389                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs    419298006                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs    105747934                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs     3.965070                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick        74970                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::writebacks    11.898802                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher   255.776488                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher 30320.466972                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst     1.992778                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data  2166.531350                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::writebacks     0.000363                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.007806                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.925307                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.000061                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.066117                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.999654                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022        29000                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024         3768                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0          141                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1          326                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::2        28528                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::3            4                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::4            1                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::0          230                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          642                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::2         2855                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::3           20                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::4           21                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.885010                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.114990                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses   6780695134                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses   6780695134                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp    105695054                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty       585409                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict    105123310                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq        46707                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp        46707                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq    105695054                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq           84                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port    317192325                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::total    317192325                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total    317192325                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port   6804938880                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::total   6804938880                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total   6804938880                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples    105741845                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0    105741845    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total    105741845                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy 249421824907                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy 237584954159                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests    211450564                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests    105708744                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            833                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples    579374.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l1dcaches.prefetcher::samples    635250.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2cache.prefetcher::samples  99161556.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples      1864.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples   5879567.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.023266433876                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds        32365                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds        32365                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState      113410513                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState        549906                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs              105741761                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                585409                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts            105741761                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts              585409                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ             63524                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             6035                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                 11.68                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 58.48                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6        105741761                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6          585409                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0             864485                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1             587489                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2             546032                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3             563377                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4             591515                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5             635722                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6             727105                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7             927275                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8            1254314                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9            4838446                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10           4941735                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11           9477423                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12          52795349                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13           5999291                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14           5899118                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15           5747345                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16           4804182                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17           4459777                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18             14850                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19              3407                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::32                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::33                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::34                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::35                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::36                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::37                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::38                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::39                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::40                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::41                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::42                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::43                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::44                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::45                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::46                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::47                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::48                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::49                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::50                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::51                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::52                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::53                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::54                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::55                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::56                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::57                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::58                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::59                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::60                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::61                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::62                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::63                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47              5979                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48              6272                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49             13048                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50             16546                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51             18708                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52             20329                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53             21694                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54             22928                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55             24076                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56             25192                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57             26337                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58             27254                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59             28148                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60             28431                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61             29308                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62             29634                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63             29963                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::64             29997                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::65             18415                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::66             14765                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::67             12374                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::68             10570                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::69              9403                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::70              8446                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::71              7397                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::72              6698                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::73              5939                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::74              5375                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::75              4841                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::76              4275                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::77              3930                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::78              3533                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::79              3343                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::80              3041                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::81              2801                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::82              2592                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::83              2383                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::84              2174                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::85              2061                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::86              1974                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::87              1932                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::88              1798                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::89              1710                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::90              1635                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::91              1470                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::92              1407                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::93              1329                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::94              1343                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::95              1254                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::96              1185                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::97              1066                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::98              1227                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::99              1301                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::100             1316                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::101             1335                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::102             1430                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::103             1405                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::104             1586                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::105             1717                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::106             1863                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::107             1929                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::108             2091                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::109             1757                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::110              962                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::111              935                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::112              691                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::113              643                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::114              368                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::115              232                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::116               36                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::117               51                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::118               60                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::119               27                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::120               13                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::121               14                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::122               15                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::123                5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::124                4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::125                8                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::126                3                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::127                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples        32365                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  3263.678202                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  6092.644466                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-4095        24656     76.18%     76.18% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::4096-8191         3951     12.21%     88.39% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::8192-12287         1901      5.87%     94.26% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::12288-16383         1044      3.23%     97.49% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16384-20479          468      1.45%     98.93% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::20480-24575          171      0.53%     99.46% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24576-28671           54      0.17%     99.63% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::28672-32767           13      0.04%     99.67% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::32768-36863            6      0.02%     99.69% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::40960-45055            1      0.00%     99.69% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::49152-53247            4      0.01%     99.70% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::53248-57343            4      0.01%     99.72% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::57344-61439            2      0.01%     99.72% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::61440-65535            6      0.02%     99.74% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::65536-69631            7      0.02%     99.76% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::69632-73727           10      0.03%     99.79% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::73728-77823           14      0.04%     99.84% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::77824-81919           14      0.04%     99.88% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::81920-86015           13      0.04%     99.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::86016-90111           12      0.04%     99.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::90112-94207            6      0.02%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::94208-98303            4      0.01%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::98304-102399            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::102400-106495            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::106496-110591            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::180224-184319            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total        32365                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples        32365                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    17.899367                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    17.393950                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     5.792703                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16        24619     76.07%     76.07% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::17          209      0.65%     76.71% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::18         2135      6.60%     83.31% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::19         1057      3.27%     86.58% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::20          706      2.18%     88.76% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::21          468      1.45%     90.20% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::22          374      1.16%     91.36% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::23          311      0.96%     92.32% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::24          307      0.95%     93.27% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::25          258      0.80%     94.06% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::26          216      0.67%     94.73% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::27          158      0.49%     95.22% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::28          172      0.53%     95.75% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::29          148      0.46%     96.21% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::30          133      0.41%     96.62% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::31           95      0.29%     96.91% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::32           96      0.30%     97.21% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::33           88      0.27%     97.48% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::34           73      0.23%     97.71% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::35           64      0.20%     97.91% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::36           36      0.11%     98.02% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::37           49      0.15%     98.17% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::38           49      0.15%     98.32% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::39           42      0.13%     98.45% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::40           27      0.08%     98.53% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::41           34      0.11%     98.64% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::42           27      0.08%     98.72% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::43           23      0.07%     98.79% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::44           29      0.09%     98.88% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::45           22      0.07%     98.95% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::46           18      0.06%     99.01% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::47           18      0.06%     99.06% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::48           16      0.05%     99.11% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::49           20      0.06%     99.17% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::50           12      0.04%     99.21% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::51           20      0.06%     99.27% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::52           10      0.03%     99.30% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::53           11      0.03%     99.34% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::54            7      0.02%     99.36% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::55           10      0.03%     99.39% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::56           12      0.04%     99.43% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::57           11      0.03%     99.46% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::58            7      0.02%     99.48% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::59           12      0.04%     99.52% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::60            9      0.03%     99.55% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::61            9      0.03%     99.57% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::62           11      0.03%     99.61% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::63            5      0.02%     99.62% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::64           15      0.05%     99.67% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::65           12      0.04%     99.71% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::66            8      0.02%     99.73% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::67            8      0.02%     99.76% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::68            9      0.03%     99.78% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::69           12      0.04%     99.82% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::70            9      0.03%     99.85% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::71            6      0.02%     99.87% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::72            7      0.02%     99.89% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::73            6      0.02%     99.91% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::74            3      0.01%     99.92% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::75            7      0.02%     99.94% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::76            9      0.03%     99.97% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::77            4      0.01%     99.98% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::78            5      0.02%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::79            2      0.01%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total        32365                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ            4065536                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys         6767472704                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys        37466176                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         5919574727.46108723                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         32772031.49310392                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap             1143236228351                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 10752.06                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l1dcaches.prefetcher     40656000                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2cache.prefetcher   6346339584                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst       119296                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data    376292288                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks     37076032                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l1dcaches.prefetcher 35562201.821280956268                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2cache.prefetcher 5551205458.298707008362                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 104349.380865592611                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 329146553.759533107281                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 32430768.711045626551                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l1dcaches.prefetcher       639881                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2cache.prefetcher     99189423                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst         1864                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data      5910593                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks       585409                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l1dcaches.prefetcher  52219076078                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2cache.prefetcher 9208334686946                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst     55239294                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data 433747739583                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks 64192150612658                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l1dcaches.prefetcher     81607.48                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2cache.prefetcher     92835.85                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     29634.81                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     73384.81                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks 109653508.25                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l1dcaches.prefetcher     40952384                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2cache.prefetcher   6348123072                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst       119296                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data    378277952                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total   6767472704                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst       119296                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       119296                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks     37466176                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total     37466176                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l1dcaches.prefetcher       639881                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2cache.prefetcher     99189423                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst         1864                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data      5910593                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total    105741761                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks       585409                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total       585409                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l1dcaches.prefetcher     35821452                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2cache.prefetcher   5552765493                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst       104349                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data    330883434                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   5919574727                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst       104349                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total       104349                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks     32772031                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     32772031                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks     32772031                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l1dcaches.prefetcher     35821452                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2cache.prefetcher   5552765493                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst       104349                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data    330883434                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   5952346759                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts       105678237                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts         579313                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0      3391349                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1      3455940                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2      3385346                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3      3278168                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4      3202123                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5      3210441                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6      3223056                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7      3139472                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8      3254895                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9      3473991                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10      3468534                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11      3408845                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12      3262531                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13      3214792                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14      3199959                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15      3243681                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::16      3359746                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::17      3411812                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::18      3297477                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::19      3297842                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::20      3350091                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::21      3388788                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::22      3352810                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::23      3237281                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::24      3193314                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::25      3352279                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::26      3363839                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::27      3177021                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::28      3271988                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::29      3232450                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::30      3257528                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::31      3320848                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0        21963                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1         7676                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2         7911                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3         9671                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4         8062                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5         7758                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6         7689                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7        22048                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8        18091                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9        15357                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10        85469                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11        60678                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12        44849                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13        54932                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14        17994                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15        22548                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::16         7929                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::17         7823                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::18        20261                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::19         7876                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::20        12615                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::21         9470                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::22         7801                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::23        10320                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::24        13771                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::25        13473                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::26         7903                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::27         7646                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::28         7959                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::29         7618                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::30        15506                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::31         8646                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat       7845833020297                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat     352119885684                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat  9694356741901                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           74242.66                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      91734.66                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits       98185575                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits        467036                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        92.91                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        80.62                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples      7604928                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   894.220362                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   779.439667                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   285.949096                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127       330112      4.34%      4.34% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255       284116      3.74%      8.08% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383       181431      2.39%     10.46% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511       164440      2.16%     12.62% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639       172360      2.27%     14.89% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767       157545      2.07%     16.96% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895       154572      2.03%     19.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023       165556      2.18%     21.17% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151      5994796     78.83%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total      7604928                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead   6763407168                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten     37076032                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        5916.018563                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          32.430769                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              30.97                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          30.80                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.17                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.84                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy 6057494312.687751                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy 10693782491.313070                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy 144861241828.192352                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy 973572974.976216                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 99239249625.707565                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy 403996831115.989807                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy 94250962400.877731                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy 760073134749.917358                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   664.843423                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE 281092363159                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF  51392250000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT 810751685997                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy 5801465045.375562                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy 10241811632.000820                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy 145003848066.871887                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy 393058833.551967                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 99239249625.707565                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy 385197202892.435120                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy 107229385946.084274                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy 753106022042.185547                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   658.749221                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE 320202091560                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF  51392250000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT 771641957596                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles       1372432534                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.887420                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.126862                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded      1833506626                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded       413585                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued     2124662193                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued       816176                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined    287205843                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined    168736679                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved       400913                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples   1372369080                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.548171                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.587145                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0    447403892     32.60%     32.60% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1    383281490     27.93%     60.53% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2    178043716     12.97%     73.50% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3    171041318     12.46%     85.97% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4    130695679      9.52%     95.49% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5     35679399      2.60%     98.09% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6     16056126      1.17%     99.26% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7      6686830      0.49%     99.75% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8      3480630      0.25%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total   1372369080                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu      1325824      3.67%      3.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult           30      0.00%      3.67% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv          241      0.00%      3.68% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd           26      0.00%      3.68% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp       125995      0.35%      4.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt          161      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult           58      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc         1000      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc          916      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc           17      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      4.03% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd         2816      0.01%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult           43      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd           26      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      4.04% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead      2622163      7.27%     11.31% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite       563833      1.56%     12.87% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead       238662      0.66%     13.53% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite        21851      0.06%     13.59% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%     13.59% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%     13.59% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad     31115652     86.24%     99.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore        56811      0.16%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig         3134      0.01%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass        10676      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu    849631770     39.99%     39.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult      2761246      0.13%     40.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv         4196      0.00%     40.12% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd     91183074      4.29%     44.41% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp     10301015      0.48%     44.90% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt      1751881      0.08%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult         3148      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc         9453      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv         1018      0.00%     44.98% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc      4358618      0.21%     45.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     45.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd           23      0.00%     45.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     45.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     45.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     45.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     45.18% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc     92686817      4.36%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult           21      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     49.55% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd     91204706      4.29%     53.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     53.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     53.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     53.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     53.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     53.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult     91201992      4.29%     58.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     58.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     58.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     58.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     58.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     58.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     58.13% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd     91195777      4.29%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     62.42% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead     62270957      2.93%     65.36% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite     30546345      1.44%     66.79% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead     19800839      0.93%     67.72% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite     15129841      0.71%     68.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%     68.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%     68.44% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad    574172080     27.02%     95.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore      1122516      0.05%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%     95.51% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig     95314184      4.49%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total   2124662193                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.548100                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy            36079259                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.016981                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads   3267722508                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites   1235074996                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses    928897120                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads    467866762                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites    301812293                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses    230285413                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads   1922999631                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites    584418263                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses    555337205                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses    949726605                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses    234121279                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses    976882892                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts      9970090                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            1498                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           63454                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads    278132410                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     61491483                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads     10745195                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores     22291631                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return      4708692      1.50%      1.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect      4263878      1.36%      2.86% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect      2230468      0.71%      3.57% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond    192360663     61.35%     64.92% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond     10458271      3.34%     68.26% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     68.26% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond     99537897     31.74%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total    313559869                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return      1974472      2.24%      2.24% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect      2477504      2.81%      5.05% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect      1282615      1.46%      6.51% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond     66692379     75.72%     82.23% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond      7089128      8.05%     90.28% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     90.28% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond      8558786      9.72%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total     88074884                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return        11944      0.08%      0.08% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect        46392      0.31%      0.39% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect         6135      0.04%      0.43% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond     14951597     99.34%     99.77% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond        34857      0.23%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond          184      0.00%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total     15051109                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return      2734219      1.21%      1.21% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect      1786373      0.79%      2.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect       947851      0.42%      2.43% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond    125668273     55.73%     58.16% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond      3369143      1.49%     59.65% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     59.65% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond     90979111     40.35%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total    225484970                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return         7606      0.10%      0.10% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect        12253      0.16%      0.26% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect         4011      0.05%      0.32% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond      7477074     99.50%     99.81% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond        13871      0.18%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond          151      0.00%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total      7514966                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget    131749579     42.02%     42.02% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB    173108733     55.21%     97.22% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS      4708692      1.50%     98.73% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect      3992865      1.27%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total    313559869                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch      1850453     12.40%     12.40% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return     13074884     87.60%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect          221      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            1      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total     14925559                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted    192360663                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken    159414151                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect     15051109                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss        34696                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted     11458424                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted      3592685                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups    313559869                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates     11440161                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits    193546007                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.617254                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted        45332                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups    101768365                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits      3992865                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses     97775500                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return      4708692      1.50%      1.50% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect      4263878      1.36%      2.86% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect      2230468      0.71%      3.57% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond    192360663     61.35%     64.92% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond     10458271      3.34%     68.26% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     68.26% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond     99537897     31.74%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total    313559869                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return      4572213      3.81%      3.81% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect        47714      0.04%      3.85% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect      2199888      1.83%      5.68% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond     13643419     11.37%     17.05% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond        12731      0.01%     17.06% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     17.06% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond     99537897     82.94%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total    120013862                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect        46392      0.41%      0.41% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      0.41% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond     11358912     99.29%     99.70% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond        34857      0.30%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total     11440161                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect        46392      0.41%      0.41% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      0.41% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond     11358912     99.29%     99.70% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond        34857      0.30%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total     11440161                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups    101768365                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits      3992865                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses     97775500                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords         6319                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords    101774684                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows           10                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes      8468818                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops      8468811                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes      5734591                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used      2734219                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct      2726613                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect         7606                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts    287262536                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls        12672                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts     10154457                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples   1326350141                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.166143                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     2.260090                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0    782443907     58.99%     58.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1    315714065     23.80%     82.80% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2     53341357      4.02%     86.82% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3     44397166      3.35%     90.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      4533765      0.34%     90.51% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      2353217      0.18%     90.68% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6     10014373      0.76%     91.44% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7      7279621      0.55%     91.99% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8    106272670      8.01%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total   1326350141                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars        10529                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls      2734224                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass        10566      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu    719179684     46.50%     46.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult      1889575      0.12%     46.62% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv         4096      0.00%     46.62% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd     90963289      5.88%     52.50% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp      8286444      0.54%     53.04% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt      1186558      0.08%     53.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult         3133      0.00%     53.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc         9442      0.00%     53.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv         1012      0.00%     53.11% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc      3107083      0.20%     53.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     53.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd           23      0.00%     53.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     53.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     53.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     53.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     53.32% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc     91909854      5.94%     59.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult           21      0.00%     59.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     59.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     59.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     59.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     59.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     59.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     59.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd     90957216      5.88%     65.14% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     65.14% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     65.14% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     65.14% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     65.14% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     65.14% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult     90957216      5.88%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd     90957216      5.88%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     76.90% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead     37998862      2.46%     79.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite     21256088      1.37%     80.73% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead     13122475      0.85%     81.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite      9956485      0.64%     82.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%     82.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%     82.22% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad    182016560     11.77%     93.99% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore      1013534      0.07%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%     94.06% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig     91927935      5.94%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total   1546714367                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples    106272670                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts   1546542182                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps   1546714367                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP   1546542182                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP   1546714367                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.887420                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.126862                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs    265364004                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts    217593137                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts    903521269                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts    233135858                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     32226107                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts    639739575                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass        10566      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu    719179684     46.50%     46.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult      1889575      0.12%     46.62% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv         4096      0.00%     46.62% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd     90963289      5.88%     52.50% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp      8286444      0.54%     53.04% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt      1186558      0.08%     53.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult         3133      0.00%     53.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc         9442      0.00%     53.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv         1012      0.00%     53.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc      3107083      0.20%     53.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     53.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd           23      0.00%     53.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     53.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     53.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     53.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     53.32% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc     91909854      5.94%     59.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult           21      0.00%     59.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     59.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     59.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     59.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     59.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     59.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     59.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd     90957216      5.88%     65.14% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     65.14% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     65.14% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     65.14% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     65.14% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     65.14% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult     90957216      5.88%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd     90957216      5.88%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     76.90% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead     37998862      2.46%     79.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite     21256088      1.37%     80.73% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead     13122475      0.85%     81.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite      9956485      0.64%     82.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%     82.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%     82.22% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad    182016560     11.77%     93.99% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore      1013534      0.07%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%     94.06% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig     91927935      5.94%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total   1546714367                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl    225484970                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl    130823789                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl     94661181                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl    125668273                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl     99816697                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall      2734224                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn      2734219                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles     85934889                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles   1000615339                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles    108168875                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles    167397619                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles     10252358                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved    153836524                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred      5151659                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts   1939598974                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts     29917012                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts   2114692103                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches    250491081                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts    653615302                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     45064889                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.540835                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numFpRegReads    226473656                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites    206116609                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads   2202832057                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites    853231881                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs    698680191                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads   2670526898                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites   1225803129                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads    639516386                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites    459407756                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches    181810290                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles    1345229676                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles     30298128                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles          125                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles          597                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.cacheLines    101615354                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         1736                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples   1372369080                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.565699                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     2.765962                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0    959919395     69.95%     69.95% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1     39582082      2.88%     72.83% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2     47581229      3.47%     76.30% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3     43167039      3.15%     79.44% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4     42606440      3.10%     82.55% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5     27613036      2.01%     84.56% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6     49932988      3.64%     88.20% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7     19352988      1.41%     89.61% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8    142613883     10.39%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total   1372369080                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts   2148210799                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.565258                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches    313559869                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.228470                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles     11989618                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles     10252358                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles    268494728                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles     14357148                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts   1833920211                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts     12679007                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts    278132410                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     61491483                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts       196408                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents      5418339                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents      3475576                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents       185031                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect      8633150                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect      2056821                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts     10689971                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit   1716760196                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount   1714519738                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst   1148245857                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst   1409687008                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.249256                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.814540                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads      5477320                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads     44996552                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses        37429                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation       185031                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores     29263337                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads         1464                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache    115824486                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples    233135858                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean    56.392985                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    73.779333                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     91713885     39.34%     39.34% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19     22053030      9.46%     48.80% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29      2791268      1.20%     50.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39      6860261      2.94%     52.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49      8997552      3.86%     56.80% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59     35008380     15.02%     71.81% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69      4194016      1.80%     73.61% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79      5185482      2.22%     75.84% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89      2620338      1.12%     76.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99      2016241      0.86%     77.83% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109      1520035      0.65%     78.48% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119      1938535      0.83%     79.31% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129      1504033      0.65%     79.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139      2865164      1.23%     81.18% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149      4054971      1.74%     82.92% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159     21394343      9.18%     92.10% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169      1979691      0.85%     92.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179      1344082      0.58%     93.53% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189      2786322      1.20%     94.72% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199      8640816      3.71%     98.43% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209       844589      0.36%     98.79% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219       897681      0.39%     99.17% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229       223464      0.10%     99.27% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239       131124      0.06%     99.33% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249        81643      0.04%     99.36% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259        48735      0.02%     99.38% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269        35954      0.02%     99.40% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279        27744      0.01%     99.41% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289        22711      0.01%     99.42% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299        17003      0.01%     99.43% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows      1336765      0.57%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value         1662                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total    233135858                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.dtb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.dtb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.itb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.itb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 1143236299156                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles     10252358                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles    146663548                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles    455387217                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles     13414605                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles    206001830                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles    540649522                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts   1894945158                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents     10761370                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents    492194670                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents     16400753                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents      4990114                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands   1652506510                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups   2942185898                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups   1998998028                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups    262288311                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.vecLookups    659260964                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps   1383831633                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps    268674877                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing       204592                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing       205109                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts    897065198                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads       3054005715                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes      3714281529                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts   1546542182                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps   1546714367                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls           47                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
