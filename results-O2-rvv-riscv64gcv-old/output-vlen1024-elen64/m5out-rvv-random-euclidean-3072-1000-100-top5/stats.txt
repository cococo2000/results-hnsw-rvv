
---------- Begin Simulation Statistics ----------
simSeconds                                   1.092335                       # Number of seconds simulated (Second)
simTicks                                 1092334515517                       # Number of ticks simulated (Tick)
finalTick                                1092334515517                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                  20398.96                       # Real time elapsed on the host (Second)
hostTickRate                                 53548534                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                   17194136                       # Number of bytes of host memory used (Byte)
simInsts                                   1499824892                       # Number of instructions simulated (Count)
simOps                                     1499997077                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                    73525                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                      73533                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data    340288755                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total    340288755                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data    340288755                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total    340288755                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data    291952644                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total    291952644                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data    291952644                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total    291952644                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data 22435712781448                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total 22435712781448                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data 22435712781448                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total 22435712781448                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data    632241399                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total    632241399                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data    632241399                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total    632241399                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.461774                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.461774                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.461774                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.461774                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 76847.095728                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 76847.095728                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 76847.095728                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 76847.095728                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs    604485779                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets          103                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs    114120105                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets            6                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs     5.296926                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets    17.166667                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks     13533674                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total     13533674                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data    120659855                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total    120659855                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data    120659855                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total    120659855                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data    171292789                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total    171292789                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher     30758973                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data    171292789                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total    202051762                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data 12785803102152                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total 12785803102152                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 1409566943874                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data 12785803102152                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total 14195370046026                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.270929                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.270929                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.270929                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.319580                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 74642.973454                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 74642.973454                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 45826.203101                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 74642.973454                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 70256.106185                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements    202060495                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher     30758973                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::total     30758973                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 1409566943874                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::total 1409566943874                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 45826.203101                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::total 45826.203101                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::processor.cores.core.data         3432                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::total         3432                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::processor.cores.core.data        58369                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::total        58369                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::processor.cores.core.data   4341656809                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::total   4341656809                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::processor.cores.core.data        61801                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::total        61801                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::processor.cores.core.data     0.944467                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::total     0.944467                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::processor.cores.core.data 74382.922596                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::total 74382.922596                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::processor.cores.core.data        49469                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::total        49469                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::processor.cores.core.data         8900                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::total         8900                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::processor.cores.core.data    216410068                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::total    216410068                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::processor.cores.core.data     0.144011                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::total     0.144011                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::processor.cores.core.data 24315.737978                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::total 24315.737978                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data    311836451                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total    311836451                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data    288554625                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total    288554625                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data 22301335295407                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total 22301335295407                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data    600391076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total    600391076                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.480611                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.480611                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 77286.355384                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 77286.355384                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data    117922951                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total    117922951                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data    170631674                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total    170631674                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data 12770224129628                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total 12770224129628                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.284201                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.284201                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 74840.877020                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 74840.877020                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::processor.cores.core.data           20                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::total           20                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::processor.cores.core.data           20                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::total           20                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data         1639                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total         1639                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data          400                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total          400                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data     11568704                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total     11568704                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data         2039                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total         2039                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.196175                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.196175                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data 28921.760000                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total 28921.760000                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data          400                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total          400                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data      8236704                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total      8236704                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.196175                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.196175                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data 20591.760000                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total 20591.760000                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::processor.cores.core.data       101952                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.hits::total       101952                       # number of WriteLineReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::processor.cores.core.data           66                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.misses::total           66                       # number of WriteLineReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::processor.cores.core.data      2156588                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.missLatency::total      2156588                       # number of WriteLineReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::processor.cores.core.data       102018                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.accesses::total       102018                       # number of WriteLineReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::processor.cores.core.data     0.000647                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.missRate::total     0.000647                       # miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::processor.cores.core.data 32675.575758                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMissLatency::total 32675.575758                       # average WriteLineReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrHits::processor.cores.core.data            3                       # number of WriteLineReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrHits::total            3                       # number of WriteLineReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::processor.cores.core.data           63                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMisses::total           63                       # number of WriteLineReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::processor.cores.core.data      1481025                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissLatency::total      1481025                       # number of WriteLineReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::processor.cores.core.data     0.000618                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.mshrMissRate::total     0.000618                       # mshr miss rate for WriteLineReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::processor.cores.core.data 23508.333333                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteLineReq.avgMshrMissLatency::total 23508.333333                       # average WriteLineReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data     28350352                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total     28350352                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data      3397953                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total      3397953                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data 134375329453                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total 134375329453                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data     31748305                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total     31748305                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.107028                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.107028                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 39545.964718                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 39545.964718                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data      2736901                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total      2736901                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data       661052                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total       661052                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data  15577491499                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total  15577491499                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.020822                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.020822                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 23564.699145                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 23564.699145                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.prefetcher.demandMshrMisses    171292789                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIssued     37768400                       # number of hwpf issued (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUnused      4324654                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUseful       789018                       # number of useful prefetch (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1dcaches.prefetcher.accuracy     0.020891                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.coverage     0.004585                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInCache      2088972                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInMSHR      4920353                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInWB          102                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfLate      7009427                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIdentified    702887797                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfBufferHit    343916080                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedDemand    156851039                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedFull       415387                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfSpanPage     28474659                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulSpanPage       117338                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse   511.990586                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs    542354936                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs    202061007                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs     2.684115                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       219079                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher    42.473802                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data   469.516784                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.082957                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.917025                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999982                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1022          282                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024          230                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::0          156                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::1          126                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0          120                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1          110                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1022     0.550781                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024     0.449219                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses   5260503079                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses   5260503079                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst     99041168                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total     99041168                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst     99041168                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total     99041168                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst         4411                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total         4411                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst         4411                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total         4411                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst    239262590                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total    239262590                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst    239262590                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total    239262590                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst     99045579                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total     99045579                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst     99045579                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total     99045579                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.000045                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.000045                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.000045                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.000045                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 54242.255724                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 54242.255724                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 54242.255724                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 54242.255724                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks         2788                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total         2788                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst         1057                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total         1057                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst         1057                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total         1057                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst         3354                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total         3354                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst         3354                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total         3354                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst    185317510                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total    185317510                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst    185317510                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total    185317510                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.000034                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.000034                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.000034                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.000034                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 55252.686345                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 55252.686345                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 55252.686345                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 55252.686345                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements         2788                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst     99041168                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total     99041168                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst         4411                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total         4411                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst    239262590                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total    239262590                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst     99045579                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total     99045579                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.000045                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.000045                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 54242.255724                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 54242.255724                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst         1057                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total         1057                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst         3354                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total         3354                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst    185317510                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total    185317510                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000034                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.000034                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 55252.686345                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 55252.686345                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.prefetcher.demandMshrMisses         3354                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1icaches.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   510.090080                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs     99044522                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs         3354                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs 29530.268933                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        76636                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   510.090080                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.996270                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.996270                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           88                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1           94                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4          330                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses    396185670                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses    396185670                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp    201402883                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackDirty     14113927                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean         2788                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::CleanEvict    287326742                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::HardPFReq    103198353                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::UpgradeReq           54                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::UpgradeResp           54                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadExReq       660626                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadExResp       660626                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq    201402884                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::InvalidateReq          852                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::InvalidateResp          852                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port         9442                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port    606182618                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total    606192060                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port       389632                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port  13798005056                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total  13798394688                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops          202578581                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic     37139648                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples    404701454                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean     0.001192                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev     0.034525                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0    404219577     99.88%     99.88% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1       481517      0.12%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2          360      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            2                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total    404701454                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy 380824306562                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy      8421582                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer1.occupancy 504949087035                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer1.utilization          0.5                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests    404321296                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests    202198112                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests       122991                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops       359143                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops       358783                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops          360                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.l1dcaches.prefetcher     24181177                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst         1049                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.data     80574603                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total    104756829                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.l1dcaches.prefetcher     24181177                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst         1049                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.data     80574603                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total    104756829                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandMisses::cache_hierarchy.l1dcaches.prefetcher      6577795                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.inst         2251                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.data     90726581                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::total     97306627                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.overallMisses::cache_hierarchy.l1dcaches.prefetcher      6577795                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.inst         2251                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.data     90726581                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::total     97306627                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.demandMissLatency::cache_hierarchy.l1dcaches.prefetcher 588090179669                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.inst    160461623                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.data 9747918452702                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::total 10336169093994                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::cache_hierarchy.l1dcaches.prefetcher 588090179669                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.inst    160461623                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.data 9747918452702                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::total 10336169093994                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.l1dcaches.prefetcher     30758972                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst         3300                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.data    171301184                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total    202063456                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.l1dcaches.prefetcher     30758972                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst         3300                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.data    171301184                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total    202063456                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandMissRate::cache_hierarchy.l1dcaches.prefetcher     0.213850                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.inst     0.682121                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.data     0.529632                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::total     0.481565                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::cache_hierarchy.l1dcaches.prefetcher     0.213850                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.inst     0.682121                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.data     0.529632                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::total     0.481565                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMissLatency::cache_hierarchy.l1dcaches.prefetcher 89405.367554                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.inst 71284.594847                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.data 107442.806124                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::total 106222.663478                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::cache_hierarchy.l1dcaches.prefetcher 89405.367554                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.inst 71284.594847                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.data 107442.806124                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::total 106222.663478                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs      5194700                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs      1046631                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs     4.963258                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.writebacks::writebacks       580253                       # number of writebacks (Count)
board.cache_hierarchy.l2cache.writebacks::total       580253                       # number of writebacks (Count)
board.cache_hierarchy.l2cache.demandMshrHits::cache_hierarchy.l1dcaches.prefetcher      6113477                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::processor.cores.core.data     85349413                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::total     91462890                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::cache_hierarchy.l1dcaches.prefetcher      6113477                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::processor.cores.core.data     85349413                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::total     91462890                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::cache_hierarchy.l1dcaches.prefetcher       464318                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.inst         2251                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.data      5377168                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::total      5843737                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher       464318                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.l2cache.prefetcher     93564748                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.inst         2251                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.data      5377168                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::total     99408485                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  72463706787                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.inst    158586540                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.data 604191883573                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::total 676814176900                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  72463706787                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.l2cache.prefetcher 11438702276400                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.inst    158586540                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.data 604191883573                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::total 12115516453300                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.015095                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.inst     0.682121                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.data     0.031390                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::total     0.028920                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.015095                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.l2cache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.inst     0.682121                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.data     0.031390                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::total     0.491967                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 156064.823649                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 70451.594847                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 112362.471021                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::total 115818.726425                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 156064.823649                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.l2cache.prefetcher 122254.401587                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 70451.594847                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 112362.471021                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::total 121876.079827                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.replacements     99380174                       # number of replacements (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMisses::writebacks       146055                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMisses::total       146055                       # number of CleanEvict MSHR misses (Count)
board.cache_hierarchy.l2cache.CleanEvict.mshrMissRate::writebacks          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.l2cache.CleanEvict.mshrMissRate::total          inf                       # mshr miss rate for CleanEvict accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.mshrMisses::cache_hierarchy.l2cache.prefetcher     93564748                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMisses::total     93564748                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissLatency::cache_hierarchy.l2cache.prefetcher 11438702276400                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissLatency::total 11438702276400                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissRate::cache_hierarchy.l2cache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2cache.prefetcher 122254.401587                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.HardPFReq.avgMshrMissLatency::total 122254.401587                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.hits::cache_hierarchy.l1dcaches.prefetcher            1                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.hits::processor.cores.core.data          742                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.hits::total          743                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::processor.cores.core.data          109                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::total          109                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::processor.cores.core.data      1825936                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::total      1825936                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::cache_hierarchy.l1dcaches.prefetcher            1                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::processor.cores.core.data          851                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::total          852                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::processor.cores.core.data     0.128085                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::total     0.127934                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::processor.cores.core.data 16751.706422                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::total 16751.706422                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::processor.cores.core.data           25                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::total           25                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::processor.cores.core.data           84                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::total           84                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::processor.cores.core.data      1341963                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::total      1341963                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::processor.cores.core.data     0.098707                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::total     0.098592                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::processor.cores.core.data 15975.750000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::total 15975.750000                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.hits::cache_hierarchy.l1dcaches.prefetcher            4                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.hits::processor.cores.core.data       614431                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.hits::total       614435                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::cache_hierarchy.l1dcaches.prefetcher            4                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::processor.cores.core.data        46187                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::total        46191                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::cache_hierarchy.l1dcaches.prefetcher       548947                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::processor.cores.core.data   3181963370                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::total   3182512317                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.accesses::cache_hierarchy.l1dcaches.prefetcher            8                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.accesses::processor.cores.core.data       660618                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.accesses::total       660626                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.missRate::cache_hierarchy.l1dcaches.prefetcher     0.500000                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.missRate::processor.cores.core.data     0.069915                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.missRate::total     0.069920                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher 137236.750000                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::processor.cores.core.data 68893.051508                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::total 68898.969864                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher            4                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::processor.cores.core.data         1488                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::total         1492                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::processor.cores.core.data        44699                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::total        44699                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::processor.cores.core.data   3079836739                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::total   3079836739                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.067662                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::total     0.067662                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 68901.692186                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::total 68901.692186                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.l1dcaches.prefetcher     24181173                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst         1049                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.data     79960172                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total    104142394                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::cache_hierarchy.l1dcaches.prefetcher      6577791                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.inst         2251                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.data     90680394                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::total     97260436                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::cache_hierarchy.l1dcaches.prefetcher 588089630722                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.inst    160461623                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.data 9744736489332                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::total 10332986581677                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.l1dcaches.prefetcher     30758964                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst         3300                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.data    170640566                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total    201402830                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::cache_hierarchy.l1dcaches.prefetcher     0.213850                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.inst     0.682121                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.data     0.531412                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::total     0.482915                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher 89405.338467                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 71284.594847                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 107462.440992                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::total 106240.389275                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher      6113473                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::processor.cores.core.data     85347925                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::total     91461398                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher       464318                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.inst         2251                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data      5332469                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::total      5799038                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  72463706787                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst    158586540                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data 601112046834                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::total 673734340161                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.015095                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.682121                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.031250                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::total     0.028793                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 156064.823649                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 70451.594847                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 112726.777565                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::total 116180.363047                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.UpgradeReq.hits::processor.cores.core.data           54                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l2cache.UpgradeReq.hits::total           54                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l2cache.UpgradeReq.accesses::processor.cores.core.data           54                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.UpgradeReq.accesses::total           54                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks         2788                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total         2788                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks         2788                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total         2788                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::writebacks     13533674                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::total     13533674                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::writebacks     13533674                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::total     13533674                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses      5843737                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued    205393790                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUnused       994704                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful      1105095                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy     0.005380                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage     0.159033                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache      3322725                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR    108506264                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB           53                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate    111829042                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified    368285802                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit    141270467                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand     12675558                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage     14870178                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage       181542                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse 32756.138264                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs    406081624                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs     99413710                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs     4.084765                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick        74970                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::writebacks    12.734894                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher   261.063985                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher 30339.261105                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst     2.262838                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data  2140.815442                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::writebacks     0.000389                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.007967                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.925881                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.000069                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.065333                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.999638                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022        29330                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024         3438                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0          145                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1         1981                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::2        27076                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::3          128                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::0          229                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          986                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::2         2116                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::3           98                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::4            9                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.895081                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.104919                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses   6565455358                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses   6565455358                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp     99362114                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty       580253                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict     98793521                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq        44699                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp        44699                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq     99362115                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq           84                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port    298187485                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::total    298187485                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total    298187485                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port   6399172224                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::total   6399172224                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total   6399172224                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples     99406898                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0     99406898    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total     99406898                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy 234463828989                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy 223721948187                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.2                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests    198780675                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests     99373802                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            833                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples    576853.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l1dcaches.prefetcher::samples    609628.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2cache.prefetcher::samples  93330532.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples      2251.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples   5405016.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.033916625958                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds        32214                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds        32214                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState      106712333                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState        548082                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs               99406814                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                580253                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts             99406814                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts              580253                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ             59387                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             3400                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                 11.61                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 58.46                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    3                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6         99406814                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6          580253                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0             821104                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1             577883                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2             537849                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3             549199                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4             575915                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5             617172                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6             703506                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7             889960                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8            1201997                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9            4552325                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10           4625233                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11           8875233                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12          49536334                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13           5641889                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14           5544861                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15           5397179                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16           4506226                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17           4178033                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18             12449                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19              3080                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::32                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::33                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::34                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::35                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::36                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::37                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::38                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::39                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::40                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::41                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::42                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::43                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::44                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::45                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::46                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::47                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::48                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::49                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::50                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::51                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::52                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::53                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::54                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::55                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::56                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::57                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::58                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::59                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::60                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::61                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::62                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::63                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47              5909                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48              6199                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49             12890                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50             16428                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51             18552                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52             20190                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53             21457                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54             22752                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55             23877                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56             24982                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57             26208                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58             27215                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59             27977                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60             28331                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61             28922                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62             29460                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63             29790                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::64             29667                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::65             18304                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::66             14466                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::67             12348                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::68             10578                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::69              9442                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::70              8419                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::71              7645                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::72              6749                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::73              5962                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::74              5411                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::75              4931                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::76              4416                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::77              4040                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::78              3593                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::79              3294                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::80              3062                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::81              2760                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::82              2563                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::83              2413                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::84              2242                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::85              2178                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::86              2055                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::87              1886                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::88              1823                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::89              1710                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::90              1612                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::91              1485                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::92              1410                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::93              1319                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::94              1287                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::95              1117                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::96              1110                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::97              1081                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::98              1314                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::99              1319                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::100             1359                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::101             1373                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::102             1487                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::103             1546                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::104             1504                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::105             1633                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::106             1739                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::107             1904                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::108             2107                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::109             1812                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::110             1101                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::111              865                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::112              686                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::113              615                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::114              406                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::115              291                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::116               95                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::117               31                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::118               31                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::119               19                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::120               13                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::121                9                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::122                7                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::123                6                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::124                4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::125                4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::126                4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::127                5                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples        32214                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  3079.952598                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  6700.408532                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-16383        31531     97.88%     97.88% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16384-32767          673      2.09%     99.97% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::32768-49151            1      0.00%     99.97% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::114688-131071            2      0.01%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::180224-196607            1      0.00%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::212992-229375            1      0.00%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::229376-245759            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::245760-262143            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::393216-409599            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::409600-425983            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::540672-557055            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total        32214                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples        32214                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    17.904948                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    17.391771                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     5.860910                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16        24590     76.33%     76.33% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::17          185      0.57%     76.91% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::18         2161      6.71%     83.62% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::19          986      3.06%     86.68% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::20          664      2.06%     88.74% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::21          469      1.46%     90.19% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::22          370      1.15%     91.34% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::23          321      1.00%     92.34% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::24          272      0.84%     93.18% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::25          251      0.78%     93.96% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::26          214      0.66%     94.63% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::27          177      0.55%     95.18% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::28          174      0.54%     95.72% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::29          158      0.49%     96.21% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::30          117      0.36%     96.57% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::31          106      0.33%     96.90% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::32           99      0.31%     97.21% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::33           85      0.26%     97.47% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::34           55      0.17%     97.64% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::35           76      0.24%     97.88% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::36           45      0.14%     98.02% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::37           46      0.14%     98.16% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::38           38      0.12%     98.28% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::39           36      0.11%     98.39% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::40           44      0.14%     98.53% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::41           29      0.09%     98.62% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::42           32      0.10%     98.71% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::43           28      0.09%     98.80% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::44           18      0.06%     98.86% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::45           17      0.05%     98.91% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::46           23      0.07%     98.98% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::47           12      0.04%     99.02% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::48           19      0.06%     99.08% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::49           18      0.06%     99.13% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::50           16      0.05%     99.18% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::51           16      0.05%     99.23% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::52           15      0.05%     99.28% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::53           12      0.04%     99.32% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::54            6      0.02%     99.34% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::55           12      0.04%     99.37% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::56           11      0.03%     99.41% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::57           17      0.05%     99.46% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::58            6      0.02%     99.48% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::59           12      0.04%     99.52% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::60           10      0.03%     99.55% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::61            9      0.03%     99.57% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::62            4      0.01%     99.59% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::63            9      0.03%     99.62% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::64           15      0.05%     99.66% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::65           11      0.03%     99.70% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::66            6      0.02%     99.71% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::67            7      0.02%     99.74% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::68            7      0.02%     99.76% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::69            7      0.02%     99.78% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::70           12      0.04%     99.82% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::71            8      0.02%     99.84% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::72            7      0.02%     99.86% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::73            8      0.02%     99.89% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::74            6      0.02%     99.91% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::75            4      0.01%     99.92% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::76           10      0.03%     99.95% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::77            3      0.01%     99.96% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::78            8      0.02%     99.98% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::79            1      0.00%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::80            3      0.01%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::88            1      0.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total        32214                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ            3800768                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys         6362036096                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys        37136192                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         5824256219.70652485                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         33997087.40543048                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap             1092334468869                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 10924.76                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l1dcaches.prefetcher     39016192                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2cache.prefetcher   5973154048                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst       144064                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data    345921024                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks     36914560                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l1dcaches.prefetcher 35718171.902252592146                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2cache.prefetcher 5468246185.714380264282                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 131886.338803287537                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 316680484.857036888599                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 33794189.852664694190                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l1dcaches.prefetcher       613847                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2cache.prefetcher     93358101                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst         2251                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data      5432615                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks       580253                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l1dcaches.prefetcher  49903432699                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2cache.prefetcher 8663709312844                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst     72353923                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data 397257172617                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks 61122610763136                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l1dcaches.prefetcher     81296.21                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2cache.prefetcher     92800.83                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     32143.01                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     73124.48                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks 105337862.56                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l1dcaches.prefetcher     39286208                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2cache.prefetcher   5974918464                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst       144064                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data    347687360                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total   6362036096                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst       144064                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       144064                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks     37136192                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total     37136192                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l1dcaches.prefetcher       613847                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2cache.prefetcher     93358101                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst         2251                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data      5432615                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total     99406814                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks       580253                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total       580253                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l1dcaches.prefetcher     35965364                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2cache.prefetcher   5469861456                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst       131886                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data    318297513                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   5824256220                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst       131886                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total       131886                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks     33997087                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     33997087                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks     33997087                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l1dcaches.prefetcher     35965364                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2cache.prefetcher   5469861456                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst       131886                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data    318297513                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   5858253307                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts        99347427                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts         576790                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0      3175359                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1      3247509                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2      3182146                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3      3076967                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4      3015622                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5      3026402                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6      3030235                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7      2953933                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8      3060426                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9      3257276                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10      3244794                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11      3206052                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12      3076490                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13      3018758                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14      3024252                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15      3057615                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::16      3149728                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::17      3207410                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::18      3104817                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::19      3105373                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::20      3140190                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::21      3170316                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::22      3150455                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::23      3041065                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::24      3011156                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::25      3153800                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::26      3153675                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::27      2991734                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::28      3078389                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::29      3045639                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::30      3077810                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::31      3112034                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0        21956                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1         7676                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2         7911                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3         9670                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4         8063                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5         7758                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6         7689                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7        22063                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8        17931                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9        15065                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10        84952                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11        60288                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12        44644                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13        54672                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14        17990                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15        21977                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::16         7929                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::17         7823                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::18        20149                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::19         7877                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::20        12622                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::21         9478                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::22         7801                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::23        10329                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::24        13769                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::25        13482                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::26         7903                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::27         7646                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::28         7959                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::29         7618                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::30        15452                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::31         8648                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat       7373157078999                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat     331025626764                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat  9110942272083                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           74215.88                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      91707.88                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits       92298177                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits        465215                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        92.90                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        80.66                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples      7160810                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   893.075906                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   777.225033                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   287.224894                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127       314511      4.39%      4.39% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255       272109      3.80%      8.19% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383       171213      2.39%     10.58% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511       155737      2.17%     12.76% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639       161610      2.26%     15.01% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767       148649      2.08%     17.09% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895       145538      2.03%     19.12% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023       156319      2.18%     21.31% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151      5635124     78.69%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total      7160810                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead   6358235328                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten     36914560                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        5820.776729                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          33.794190                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              30.48                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          30.31                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.18                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.83                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy 5711099206.175642                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy 10082259146.533678                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy 136195625933.605560                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy 967932472.080205                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 94820506042.381424                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy 382251332632.071777                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy 92648741001.890381                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy 722677496434.918823                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   661.589912                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE 276585834832                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF  49103950000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT 766644730685                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy 5455319439.023586                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy 9630723245.168758                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy 136304670018.518387                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy 392747438.159970                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 94820506042.381424                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy 364093431608.912659                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy 105184144753.927292                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy 715881542546.296753                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   655.368417                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE 314366832985                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF  49103950000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT 728863732532                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles       1311325952                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.874319                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.143747                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded      1775471599                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded       317135                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued     2054474570                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued       732101                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined    275791656                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined    162495848                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved       304463                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples   1311254007                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.566801                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.593081                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0    421842371     32.17%     32.17% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1    364111606     27.77%     59.94% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2    171767019     13.10%     73.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3    166772009     12.72%     85.76% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4    126235323      9.63%     95.38% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5     34873939      2.66%     98.04% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6     15761250      1.20%     99.25% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7      6489508      0.49%     99.74% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8      3400982      0.26%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total   1311254007                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu      1274624      3.62%      3.62% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult           21      0.00%      3.62% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv          223      0.00%      3.62% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd           20      0.00%      3.62% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp       124666      0.35%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt          103      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult           59      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc          982      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc          821      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc           10      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      3.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd         2711      0.01%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult           36      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd           18      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      3.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead      2543285      7.22%     11.21% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite       530934      1.51%     12.72% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead       245332      0.70%     13.42% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite        21486      0.06%     13.48% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%     13.48% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%     13.48% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad     30399319     86.35%     99.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore        56525      0.16%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%     99.99% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig         2918      0.01%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass        10691      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu    823415991     40.08%     40.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult      2684325      0.13%     40.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv         4192      0.00%     40.21% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd     88218484      4.29%     44.50% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp     10070319      0.49%     44.99% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt      1689523      0.08%     45.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult         3142      0.00%     45.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc         9446      0.00%     45.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv         1018      0.00%     45.08% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc      4280192      0.21%     45.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     45.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd           23      0.00%     45.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     45.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     45.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     45.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     45.29% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc     89659630      4.36%     49.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult           22      0.00%     49.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     49.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     49.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     49.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     49.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     49.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     49.65% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd     88238894      4.29%     53.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     53.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     53.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     53.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     53.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     53.94% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult     88236296      4.29%     58.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     58.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     58.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     58.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     58.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     58.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     58.24% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd     88230386      4.29%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     62.53% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead     60394158      2.94%     65.47% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite     29698603      1.45%     66.92% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead     19347535      0.94%     67.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite     14760553      0.72%     68.58% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%     68.58% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%     68.58% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad    552290241     26.88%     95.46% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore      1117864      0.05%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%     95.52% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig     92113042      4.48%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total   2054474570                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.566715                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy            35204093                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.017135                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads   3148386676                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites   1195343455                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses    900394075                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads    453623034                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites    292193551                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses    223276208                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads   1854129631                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites    564219256                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses    537105411                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses    920546356                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses    227002135                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses    942119481                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts      9716350                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            1972                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           71945                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads    269270332                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     59775032                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads     10370714                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores     21948923                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return      4562611      1.50%      1.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect      4166979      1.37%      2.88% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect      2139502      0.71%      3.58% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond    186222968     61.37%     64.95% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond     10201055      3.36%     68.31% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     68.31% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond     96152318     31.69%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total    303445433                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return      1881005      2.22%      2.22% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect      2402436      2.84%      5.06% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect      1222433      1.44%      6.50% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond     64163671     75.76%     82.26% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond      6900168      8.15%     90.40% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     90.40% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond      8128376      9.60%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total     84698089                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return        11932      0.08%      0.08% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect        45045      0.31%      0.39% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect         6072      0.04%      0.43% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond     14613003     99.34%     99.77% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond        33700      0.23%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond          189      0.00%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total     14709941                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return      2681604      1.23%      1.23% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect      1764541      0.81%      2.03% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect       917068      0.42%      2.45% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond    122059288     55.80%     58.25% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond      3300887      1.51%     59.76% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     59.76% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond     88023942     40.24%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total    218747330                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return         7606      0.10%      0.10% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect        12200      0.17%      0.27% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect         3957      0.05%      0.33% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond      7259178     99.48%     99.81% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond        13739      0.19%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond          153      0.00%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total      7296833                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget    126877517     41.81%     41.81% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB    168176610     55.42%     97.23% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS      4562611      1.50%     98.74% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect      3828695      1.26%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total    303445433                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch      1787562     12.25%     12.25% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return     12800435     87.75%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect          209      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            1      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total     14588207                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted    186222968                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken    154610530                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect     14709941                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss        34313                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted     11201353                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted      3508588                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups    303445433                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates     11183160                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits    187641304                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.618369                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted        44619                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups     98291820                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits      3828695                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses     94463125                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return      4562611      1.50%      1.50% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect      4166979      1.37%      2.88% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect      2139502      0.71%      3.58% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond    186222968     61.37%     64.95% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond     10201055      3.36%     68.31% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     68.31% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond     96152318     31.69%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total    303445433                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return      4428228      3.82%      3.82% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect        55535      0.05%      3.87% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect      2110616      1.82%      5.69% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond     13035322     11.26%     16.95% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond        22110      0.02%     16.97% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     16.97% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond     96152318     83.03%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total    115804129                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect        45045      0.40%      0.40% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      0.40% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond     11104415     99.30%     99.70% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond        33700      0.30%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total     11183160                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect        45045      0.40%      0.40% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      0.40% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond     11104415     99.30%     99.70% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond        33700      0.30%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total     11183160                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups     98291820                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits      3828695                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses     94463125                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords         6261                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords     98298081                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows           10                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes      8187486                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops      8187480                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes      5505874                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used      2681604                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct      2673998                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect         7606                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts    275845109                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls        12672                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts      9911777                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples   1266906982                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.183984                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     2.274647                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0    741306908     58.51%     58.51% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1    304370625     24.02%     82.54% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2     50347299      3.97%     86.51% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3     44268121      3.49%     90.01% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      4367086      0.34%     90.35% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5      2267111      0.18%     90.53% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6      9631691      0.76%     91.29% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7      7251682      0.57%     91.86% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8    103096459      8.14%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total   1266906982                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars        10529                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls      2681609                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass        10566      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu    698217801     46.55%     46.55% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult      1850402      0.12%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv         4092      0.00%     46.67% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd     88008121      5.87%     52.54% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp      8101949      0.54%     53.08% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt      1155775      0.08%     53.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult         3133      0.00%     53.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc         9442      0.00%     53.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv         1012      0.00%     53.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc      3056976      0.20%     53.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     53.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd           23      0.00%     53.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     53.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     53.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     53.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     53.36% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc     88923903      5.93%     59.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult           21      0.00%     59.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     59.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     59.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     59.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     59.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     59.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     59.29% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd     88002048      5.87%     65.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     65.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     65.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     65.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     65.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     65.16% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult     88002048      5.87%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     71.02% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd     88002048      5.87%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     76.89% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead     37199147      2.48%     79.37% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite     20827768      1.39%     80.76% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead     12850172      0.86%     81.62% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite      9722391      0.65%     82.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%     82.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%     82.26% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad    176101723     11.74%     94.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore      1009033      0.07%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%     94.07% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig     88937483      5.93%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total   1499997077                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples    103096459                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts   1499824892                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps   1499997077                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP   1499824892                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP   1499997077                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.874319                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.143747                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs    257710234                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts    210911019                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts    877580871                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts    226149003                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     31559192                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts    618978330                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass        10566      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu    698217801     46.55%     46.55% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult      1850402      0.12%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv         4092      0.00%     46.67% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd     88008121      5.87%     52.54% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp      8101949      0.54%     53.08% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt      1155775      0.08%     53.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult         3133      0.00%     53.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc         9442      0.00%     53.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv         1012      0.00%     53.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc      3056976      0.20%     53.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     53.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd           23      0.00%     53.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     53.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     53.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     53.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     53.36% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc     88923903      5.93%     59.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult           21      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     59.29% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd     88002048      5.87%     65.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     65.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     65.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     65.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     65.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     65.16% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult     88002048      5.87%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     71.02% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd     88002048      5.87%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     76.89% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead     37199147      2.48%     79.37% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite     20827768      1.39%     80.76% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead     12850172      0.86%     81.62% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite      9722391      0.65%     82.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%     82.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%     82.26% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad    176101723     11.74%     94.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore      1009033      0.07%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%     94.07% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig     88937483      5.93%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total   1499997077                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl    218747330                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl    127124716                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl     91622614                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl    122059288                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl     96688042                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall      2681609                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn      2681604                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles     83420782                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles    950594653                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles    105518279                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles    161711713                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles     10008580                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved    149509030                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred      5053018                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts   1878809326                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts     29410773                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts   2044758220                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches    242534131                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts    629480197                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     43885360                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.559306                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numFpRegReads    219568049                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites    199664429                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads   2129961262                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites    826815744                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs    673365557                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads   2577485979                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites   1186304914                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads    618752748                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites    444375287                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches    176567916                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles    1284717928                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles     29613628                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles          140                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles          688                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.cacheLines     99045579                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         2549                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples   1311254007                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.586170                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     2.777403                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0    911842086     69.54%     69.54% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1     38237573      2.92%     72.46% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2     46114565      3.52%     75.97% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3     42124753      3.21%     79.19% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4     41136102      3.14%     82.32% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5     26795522      2.04%     84.37% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6     48338657      3.69%     88.05% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7     18841135      1.44%     89.49% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8    137823614     10.51%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total   1311254007                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts   2079380908                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.585709                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches    303445433                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.231404                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles     11728437                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles     10008580                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles    252556726                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles     13870862                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts   1775788734                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts     12603297                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts    269270332                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     59775032                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts       147411                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents      5125307                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents      3583747                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents       180398                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect      8453179                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect      1949453                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts     10402632                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit   1662953481                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount   1660775694                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst   1114747100                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst   1368745854                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.266486                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.814430                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads      5376376                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads     43121329                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses        37018                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation       180398                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores     28213801                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads         1213                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache    110266079                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples    226149003                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean    55.611638                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    72.995342                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     89869200     39.74%     39.74% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19     20664486      9.14%     48.88% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29      2733115      1.21%     50.09% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39      6745993      2.98%     53.07% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49      8520849      3.77%     56.84% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59     34823510     15.40%     72.23% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69      4169950      1.84%     74.08% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79      5164516      2.28%     76.36% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89      2621413      1.16%     77.52% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99      1985040      0.88%     78.40% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109      1542129      0.68%     79.08% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119      1883047      0.83%     79.91% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129      1449954      0.64%     80.55% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139      2717955      1.20%     81.76% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149      3863914      1.71%     83.46% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159     20101280      8.89%     92.35% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169      1851555      0.82%     93.17% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179      1269839      0.56%     93.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189      2655499      1.17%     94.91% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199      8088616      3.58%     98.48% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209       791610      0.35%     98.83% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219       835537      0.37%     99.20% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229       204060      0.09%     99.29% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239       117279      0.05%     99.35% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249        74044      0.03%     99.38% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259        43512      0.02%     99.40% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269        33062      0.01%     99.41% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279        25242      0.01%     99.42% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289        21006      0.01%     99.43% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299        15699      0.01%     99.44% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows      1266092      0.56%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value         1624                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total    226149003                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.dtb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.dtb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.itb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.itb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 1092334515517                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles     10008580                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles    142287401                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles    431117190                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles      8428475                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles    199806021                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles    519606340                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts   1835525207                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents     10350160                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents    470757310                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents     17697433                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents      4955447                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands   1600144549                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups   2848957700                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups   1936646473                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups    254156283                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.vecLookups    637202060                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps   1341474465                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps    258670084                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing       155533                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing       155981                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts    863481173                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads       2939604050                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes      3596331674                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts   1499824892                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps   1499997077                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls           47                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
