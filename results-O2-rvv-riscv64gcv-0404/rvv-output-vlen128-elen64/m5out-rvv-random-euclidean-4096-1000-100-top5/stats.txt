
---------- Begin Simulation Statistics ----------
simSeconds                                   2.451643                       # Number of seconds simulated (Second)
simTicks                                 2451642922078                       # Number of ticks simulated (Tick)
finalTick                                2451642922078                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                  59907.19                       # Real time elapsed on the host (Second)
hostTickRate                                 40924020                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                   17281740                       # Number of bytes of host memory used (Byte)
simInsts                                  11606041895                       # Number of instructions simulated (Count)
simOps                                    11607838898                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   193734                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     193764                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data   1951837385                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total   1951837385                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data   1951837385                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total   1951837385                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data    303059520                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total    303059520                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data    303059520                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total    303059520                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data 10309251474232                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total 10309251474232                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data 10309251474232                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total 10309251474232                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data   2254896905                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total   2254896905                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data   2254896905                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total   2254896905                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.134401                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.134401                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.134401                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.134401                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 34017.250058                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 34017.250058                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 34017.250058                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 34017.250058                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs        60947                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets         3008                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs        13410                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets           64                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs     4.544892                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets           47                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks     21813976                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total     21813976                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data    256641095                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total    256641095                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data    256641095                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total    256641095                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data     46418425                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total     46418425                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher    326856722                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data     46418425                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total    373275147                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data 1220581728597                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total 1220581728597                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 8741898199286                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data 1220581728597                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total 9962479927883                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.020586                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.020586                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.020586                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.165540                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 26295.199128                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 26295.199128                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 26745.352354                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 26295.199128                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 26689.373798                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements    373288113                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher    326856722                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::total    326856722                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 8741898199286                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::total 8741898199286                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 26745.352354                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::total 26745.352354                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::processor.cores.core.data         8156                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::total         8156                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::processor.cores.core.data       164273                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::total       164273                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::processor.cores.core.data  11797988083                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::total  11797988083                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::processor.cores.core.data       172429                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::total       172429                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::processor.cores.core.data     0.952699                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::total     0.952699                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::processor.cores.core.data 71819.398702                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::total 71819.398702                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::processor.cores.core.data       151180                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::total       151180                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::processor.cores.core.data        13093                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::total        13093                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::processor.cores.core.data    336022204                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::total    336022204                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::processor.cores.core.data     0.075933                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::total     0.075933                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::processor.cores.core.data 25664.263652                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::total 25664.263652                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data   1924228281                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total   1924228281                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data    297450925                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total    297450925                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data 10102522650556                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total 10102522650556                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data   2221679206                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total   2221679206                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.133886                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.133886                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 33963.661907                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 33963.661907                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data    252291438                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total    252291438                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data     45159487                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total     45159487                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data 1192750678812                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total 1192750678812                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.020327                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.020327                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 26411.962537                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 26411.962537                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::processor.cores.core.data           20                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::total           20                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::processor.cores.core.data           20                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::total           20                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data         1628                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total         1628                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data          389                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total          389                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data     11850258                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total     11850258                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data         2017                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total         2017                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.192861                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.192861                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data 30463.388175                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total 30463.388175                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data          389                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total          389                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data      8609888                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total      8609888                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.192861                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.192861                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data 22133.388175                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total 22133.388175                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data     27609104                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total     27609104                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data      5608595                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total      5608595                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data 206728823676                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total 206728823676                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data     33217699                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total     33217699                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.168844                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.168844                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 36859.288944                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 36859.288944                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data      4349657                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total      4349657                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data      1258938                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total      1258938                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data  27831049785                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total  27831049785                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.037900                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.037900                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 22106.767597                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 22106.767597                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.prefetcher.demandMshrMisses     46418425                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIssued   1288056125                       # number of hwpf issued (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUnused      7432236                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUseful    276440895                       # number of useful prefetch (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1dcaches.prefetcher.accuracy     0.214619                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.coverage     0.856227                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInCache    311271774                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInMSHR    649468636                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInWB       458993                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfLate    961199403                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIdentified   1293051957                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfBufferHit      3560986                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedDemand       618785                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfSpanPage     47921923                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulSpanPage     42863849                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse   511.995808                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs   2325135821                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs    373288625                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs     6.228788                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       219079                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher   449.108525                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data    62.887282                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.877165                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.122827                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999992                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1022          247                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024          265                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::0          142                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::1          105                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0          123                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::1          132                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::2           10                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1022     0.482422                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024     0.517578                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses  18413859593                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses  18413859593                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst    105298158                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total    105298158                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst    105298158                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total    105298158                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst        11123                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total        11123                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst        11123                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total        11123                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst    511323722                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total    511323722                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst    511323722                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total    511323722                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst    105309281                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total    105309281                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst    105309281                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total    105309281                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.000106                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.000106                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.000106                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.000106                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 45969.947137                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 45969.947137                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 45969.947137                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 45969.947137                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks         8530                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total         8530                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst         2077                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total         2077                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst         2077                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total         2077                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst         9046                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total         9046                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst         9046                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total         9046                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst    425050745                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total    425050745                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst    425050745                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total    425050745                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.000086                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.000086                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.000086                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.000086                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 46987.701194                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 46987.701194                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 46987.701194                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 46987.701194                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements         8530                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst    105298158                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total    105298158                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst        11123                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total        11123                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst    511323722                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total    511323722                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst    105309281                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total    105309281                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.000106                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.000106                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 45969.947137                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 45969.947137                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst         2077                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total         2077                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst         9046                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total         9046                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst    425050745                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total    425050745                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000086                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.000086                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 46987.701194                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 46987.701194                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.prefetcher.demandMshrMisses         9046                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1icaches.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse   510.873053                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs    105307204                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs         9046                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs 11641.300464                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        76636                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst   510.873053                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.997799                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.997799                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           87                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::1           71                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::2            9                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::4          345                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses    421246170                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses    421246170                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.transDist::ReadResp    372038108                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackDirty     22509185                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::WritebackClean         8530                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::CleanEvict    488742565                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::HardPFReq    155012771                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::UpgradeReq            4                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::UpgradeResp            4                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadExReq      1257640                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadExResp      1257640                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::ReadSharedReq    372038108                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::InvalidateReq         1923                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.transDist::InvalidateResp         1923                       # Transaction distribution (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port        26618                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port   1119865370                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktCount::total   1119891988                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port      1124608                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.cache_hierarchy.l2cache.cpu_side_port  25286443328                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.pktSize::total  25287567936                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2bus.snoops          292976413                       # Total snoops (Count)
board.cache_hierarchy.l2bus.snoopTraffic     44493696                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2bus.snoopFanout::samples    666274655                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::mean     0.000863                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::stdev     0.029368                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::0    665699498     99.91%     99.91% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::1       575157      0.09%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::max_value            1                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.snoopFanout::total    666274655                       # Request fanout histogram (Count)
board.cache_hierarchy.l2bus.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2bus.reqLayer0.occupancy 820235255264                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.reqLayer0.utilization          0.3                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer0.occupancy     23103490                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.respLayer1.occupancy 932845088465                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2bus.respLayer1.utilization          0.4                       # Layer utilization (Ratio)
board.cache_hierarchy.l2bus.snoop_filter.totRequests    746595598                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleRequests    373297354                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiRequests       506231                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.totSnoops        68924                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitSingleSnoops        68924                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2cache.demandHits::cache_hierarchy.l1dcaches.prefetcher    204438062                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.inst         4775                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::processor.cores.core.data     43029099                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.demandHits::total    247471936                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2cache.overallHits::cache_hierarchy.l1dcaches.prefetcher    204438062                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.inst         4775                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::processor.cores.core.data     43029099                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.overallHits::total    247471936                       # number of overall hits (Count)
board.cache_hierarchy.l2cache.demandMisses::cache_hierarchy.l1dcaches.prefetcher    122418656                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.inst         4267                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::processor.cores.core.data      3400885                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.demandMisses::total    125823808                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2cache.overallMisses::cache_hierarchy.l1dcaches.prefetcher    122418656                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.inst         4267                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::processor.cores.core.data      3400885                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.overallMisses::total    125823808                       # number of overall misses (Count)
board.cache_hierarchy.l2cache.demandMissLatency::cache_hierarchy.l1dcaches.prefetcher 4251946856597                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.inst    323627997                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::processor.cores.core.data 338673218034                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMissLatency::total 4590943702628                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::cache_hierarchy.l1dcaches.prefetcher 4251946856597                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.inst    323627997                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::processor.cores.core.data 338673218034                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMissLatency::total 4590943702628                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2cache.demandAccesses::cache_hierarchy.l1dcaches.prefetcher    326856718                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.inst         9042                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::processor.cores.core.data     46429984                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandAccesses::total    373295744                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::cache_hierarchy.l1dcaches.prefetcher    326856718                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.inst         9042                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::processor.cores.core.data     46429984                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.overallAccesses::total    373295744                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2cache.demandMissRate::cache_hierarchy.l1dcaches.prefetcher     0.374533                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.inst     0.471909                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::processor.cores.core.data     0.073248                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMissRate::total     0.337062                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::cache_hierarchy.l1dcaches.prefetcher     0.374533                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.inst     0.471909                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::processor.cores.core.data     0.073248                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMissRate::total     0.337062                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMissLatency::cache_hierarchy.l1dcaches.prefetcher 34732.833994                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.inst 75844.386454                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::processor.cores.core.data 99583.848920                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMissLatency::total 36487.082815                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::cache_hierarchy.l1dcaches.prefetcher 34732.833994                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.inst 75844.386454                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::processor.cores.core.data 99583.848920                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMissLatency::total 36487.082815                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.blockedCycles::no_mshrs        84255                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2cache.blockedCauses::no_mshrs         1690                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2cache.avgBlocked::no_mshrs    49.855030                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2cache.writebacks::writebacks       695210                       # number of writebacks (Count)
board.cache_hierarchy.l2cache.writebacks::total       695210                       # number of writebacks (Count)
board.cache_hierarchy.l2cache.demandMshrHits::cache_hierarchy.l1dcaches.prefetcher    120063363                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::processor.cores.core.data        57227                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrHits::total    120120590                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::cache_hierarchy.l1dcaches.prefetcher    120063363                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::processor.cores.core.data        57227                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.overallMshrHits::total    120120590                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::cache_hierarchy.l1dcaches.prefetcher      2355293                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.inst         4267                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::processor.cores.core.data      3343658                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMisses::total      5703218                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher      2355293                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::cache_hierarchy.l2cache.prefetcher    132286647                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.inst         4267                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::processor.cores.core.data      3343658                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.overallMshrMisses::total    137989865                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2cache.demandMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 262952483336                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.inst    320073586                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::processor.cores.core.data 332390966940                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissLatency::total 595663523862                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 262952483336                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::cache_hierarchy.l2cache.prefetcher 8710039000273                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.inst    320073586                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::processor.cores.core.data 332390966940                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.overallMshrMissLatency::total 9305702524135                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.demandMshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.007206                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.inst     0.471909                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::processor.cores.core.data     0.072015                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.demandMshrMissRate::total     0.015278                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.007206                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::cache_hierarchy.l2cache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.inst     0.471909                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::processor.cores.core.data     0.072015                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.overallMshrMissRate::total     0.369653                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 111643.215233                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.inst 75011.386454                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::processor.cores.core.data 99409.379470                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.demandAvgMshrMissLatency::total 104443.407890                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 111643.215233                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::cache_hierarchy.l2cache.prefetcher 65842.163195                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.inst 75011.386454                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::processor.cores.core.data 99409.379470                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.overallAvgMshrMissLatency::total 67437.579739                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.replacements    137963638                       # number of replacements (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMisses::cache_hierarchy.l2cache.prefetcher    132286647                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMisses::total    132286647                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissLatency::cache_hierarchy.l2cache.prefetcher 8710039000273                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissLatency::total 8710039000273                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissRate::cache_hierarchy.l2cache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2cache.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2cache.prefetcher 65842.163195                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.HardPFReq.avgMshrMissLatency::total 65842.163195                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.hits::processor.cores.core.data         1855                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.hits::total         1855                       # number of InvalidateReq hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::cache_hierarchy.l1dcaches.prefetcher            4                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::processor.cores.core.data           64                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.misses::total           68                       # number of InvalidateReq misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::cache_hierarchy.l1dcaches.prefetcher       297381                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::processor.cores.core.data      1816773                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.missLatency::total      2114154                       # number of InvalidateReq miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::cache_hierarchy.l1dcaches.prefetcher            4                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::processor.cores.core.data         1919                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.accesses::total         1923                       # number of InvalidateReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::cache_hierarchy.l1dcaches.prefetcher            1                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::processor.cores.core.data     0.033351                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.missRate::total     0.035361                       # miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher 74345.250000                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::processor.cores.core.data 28387.078125                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMissLatency::total 31090.500000                       # average InvalidateReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher            4                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::processor.cores.core.data           27                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrHits::total           31                       # number of InvalidateReq MSHR hits (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::processor.cores.core.data           37                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMisses::total           37                       # number of InvalidateReq MSHR misses (Count)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::processor.cores.core.data       598927                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissLatency::total       598927                       # number of InvalidateReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::processor.cores.core.data     0.019281                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.mshrMissRate::total     0.019241                       # mshr miss rate for InvalidateReq accesses (Ratio)
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::processor.cores.core.data 16187.216216                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.InvalidateReq.avgMshrMissLatency::total 16187.216216                       # average InvalidateReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.hits::cache_hierarchy.l1dcaches.prefetcher            4                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.hits::processor.cores.core.data      1201931                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.hits::total      1201935                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::cache_hierarchy.l1dcaches.prefetcher            8                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::processor.cores.core.data        55697                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.misses::total        55705                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::cache_hierarchy.l1dcaches.prefetcher       493969                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::processor.cores.core.data   3900133489                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.missLatency::total   3900627458                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.accesses::cache_hierarchy.l1dcaches.prefetcher           12                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.accesses::processor.cores.core.data      1257628                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.accesses::total      1257640                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadExReq.missRate::cache_hierarchy.l1dcaches.prefetcher     0.666667                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.missRate::processor.cores.core.data     0.044287                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.missRate::total     0.044293                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher 61746.125000                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::processor.cores.core.data 70024.121389                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMissLatency::total 70022.932555                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher            8                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::processor.cores.core.data         2155                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrHits::total         2163                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::processor.cores.core.data        53542                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMisses::total        53542                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::processor.cores.core.data   3756327701                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissLatency::total   3756327701                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.042574                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.mshrMissRate::total     0.042573                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 70156.656475                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadExReq.avgMshrMissLatency::total 70156.656475                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.hits::cache_hierarchy.l1dcaches.prefetcher    204438058                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.inst         4775                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::processor.cores.core.data     41827168                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.hits::total    246270001                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::cache_hierarchy.l1dcaches.prefetcher    122418648                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.inst         4267                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::processor.cores.core.data      3345188                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.misses::total    125768103                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::cache_hierarchy.l1dcaches.prefetcher 4251946362628                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.inst    323627997                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::processor.cores.core.data 334773084545                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.missLatency::total 4587043075170                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::cache_hierarchy.l1dcaches.prefetcher    326856706                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.inst         9042                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::processor.cores.core.data     45172356                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.accesses::total    372038104                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::cache_hierarchy.l1dcaches.prefetcher     0.374533                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.inst     0.471909                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::processor.cores.core.data     0.074054                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.missRate::total     0.338052                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::cache_hierarchy.l1dcaches.prefetcher 34732.832229                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 75844.386454                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 100076.015024                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMissLatency::total 36472.229172                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::cache_hierarchy.l1dcaches.prefetcher    120063355                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::processor.cores.core.data        55072                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrHits::total    120118427                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher      2355293                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.inst         4267                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::processor.cores.core.data      3290116                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMisses::total      5649676                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 262952483336                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst    320073586                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data 328634639239                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissLatency::total 591907196161                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher     0.007206                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.471909                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.072835                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.mshrMissRate::total     0.015186                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 111643.215233                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 75011.386454                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 99885.426301                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.ReadSharedReq.avgMshrMissLatency::total 104768.343558                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2cache.UpgradeReq.hits::processor.cores.core.data            4                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l2cache.UpgradeReq.hits::total            4                       # number of UpgradeReq hits (Count)
board.cache_hierarchy.l2cache.UpgradeReq.accesses::processor.cores.core.data            4                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.UpgradeReq.accesses::total            4                       # number of UpgradeReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::writebacks         8530                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.hits::total         8530                       # number of WritebackClean hits (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::writebacks         8530                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackClean.accesses::total         8530                       # number of WritebackClean accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::writebacks     21813975                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.hits::total     21813975                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::writebacks     21813975                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.WritebackDirty.accesses::total     21813975                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2cache.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.prefetcher.demandMshrMisses      5703218                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIssued    491744153                       # number of hwpf issued (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUnused      1326112                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUseful     10839550                       # number of useful prefetch (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2cache.prefetcher.accuracy     0.022043                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.coverage     0.655244                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInCache     12644408                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInMSHR    346813092                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2cache.prefetcher.pfHitInWB            6                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2cache.prefetcher.pfLate    359457506                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2cache.prefetcher.pfIdentified    521764294                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2cache.prefetcher.pfBufferHit     19908855                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedDemand      7473663                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2cache.prefetcher.pfSpanPage     21201414                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.pfUsefulSpanPage       519978                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2cache.tags.tagsInUse 32762.636575                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2cache.tags.totalRefs    758760263                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.sampledRefs    137998292                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2cache.tags.avgRefs     5.498331                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2cache.tags.warmupTick        74970                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2cache.tags.occupancies::writebacks     8.898251                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher   616.600514                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::cache_hierarchy.l2cache.prefetcher 31200.758540                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.inst     2.298811                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.occupancies::processor.cores.core.data   934.080459                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::writebacks     0.000272                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.018817                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::cache_hierarchy.l2cache.prefetcher     0.952172                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.inst     0.000070                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::processor.cores.core.data     0.028506                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.avgOccs::total     0.999836                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1022        31062                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.occupanciesTaskId::1024         1706                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::0          138                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::1          366                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::2        30471                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1022::3           87                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::0          232                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::1          670                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::2          769                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::3           22                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ageTaskId_1024::4           13                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1022     0.947937                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.ratioOccsTaskId::1024     0.052063                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2cache.tags.tagAccesses  12083506676                       # Number of tag accesses (Count)
board.cache_hierarchy.l2cache.tags.dataAccesses  12083506676                       # Number of data accesses (Count)
board.cache_hierarchy.l2cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp    137936323                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty       695210                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict    137261542                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq        53542                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp        53542                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq    137936323                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq           37                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port    413936519                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2cache.mem_side_port::total    413936519                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total    413936519                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::board.memory.mem_ctrl.port   8875844800                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2cache.mem_side_port::total   8875844800                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total   8875844800                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples    137989902                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0    137989902    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total    137989902                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy 319043765377                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy 342394964409                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests    275946654                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests    137956788                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            833                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_writebacks::samples    689670.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l1dcaches.prefetcher::samples   2412352.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2cache.prefetcher::samples 132204790.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples      4267.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples   3308120.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.059844176082                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds        41902                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds        41902                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState      259449927                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState        650506                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs              137989865                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                695210                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts            137989865                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts              695210                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ             60336                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts             5540                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  4.15                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 57.55                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6        137989865                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6          695210                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0            9994085                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1           20960919                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2           41888751                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3           14398859                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4           13981608                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5           12264725                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6           12386633                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7            3560492                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8            2849887                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9            2686489                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10           2332575                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11            235225                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12            251235                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13             53950                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14             42950                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15             25379                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16             10509                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17              4519                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18               399                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19               340                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::32                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::33                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::34                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::35                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::36                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::37                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::38                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::39                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::40                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::41                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::42                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::43                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::44                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::45                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::46                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::47                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::48                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::49                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::50                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::51                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::52                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::53                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::54                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::55                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::56                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::57                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::58                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::59                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::60                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::61                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::62                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::63                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47              3362                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48              3943                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49             17134                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50             23907                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51             28663                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52             32672                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53             37407                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54             41934                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55             44605                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56             46972                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57             50953                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58             55947                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59             54869                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60             47605                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61             45534                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62             44484                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63             43544                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::64             42950                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::65              2286                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::66              2064                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::67              1788                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::68              2045                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::69              1962                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::70              1785                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::71              1687                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::72              1463                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::73              1284                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::74              1254                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::75               992                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::76               953                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::77               503                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::78               343                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::79               339                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::80               313                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::81               340                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::82               263                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::83               104                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::84               179                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::85                90                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::86                95                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::87               117                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::88               164                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::89                81                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::90                76                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::91                48                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::92                56                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::93                57                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::94               108                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::95                40                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::96                40                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::97                62                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::98                61                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::99                44                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::100               34                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::101               14                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::102                4                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::103                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::104                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::105                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::106                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::107                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::108                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::109                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::110                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::111                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::112                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::113                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::114                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::115                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::116                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::117                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::118                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::119                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::120                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::121                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::122                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::123                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::124                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::125                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::126                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::127                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples        41902                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean  3291.166150                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev  6381.140340                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-8191        36390     86.85%     86.85% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::8192-16383         3985      9.51%     96.36% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::16384-24575         1150      2.74%     99.10% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::24576-32767          305      0.73%     99.83% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::32768-40959           39      0.09%     99.92% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::40960-49151            3      0.01%     99.93% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::49152-57343            1      0.00%     99.93% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::65536-73727            2      0.00%     99.94% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::73728-81919            1      0.00%     99.94% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::81920-90111            3      0.01%     99.95% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::90112-98303            1      0.00%     99.95% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::98304-106495            3      0.01%     99.95% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::106496-114687            1      0.00%     99.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::114688-122879            3      0.01%     99.96% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::122880-131071            1      0.00%     99.97% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::139264-147455            3      0.01%     99.97% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::147456-155647            1      0.00%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::155648-163839            1      0.00%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::163840-172031            2      0.00%     99.98% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::180224-188415            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::188416-196607            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::204800-212991            1      0.00%     99.99% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::212992-221183            2      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::221184-229375            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::278528-286719            1      0.00%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total        41902                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples        41902                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    16.457854                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.388540                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     1.836670                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16        37091     88.52%     88.52% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::17          446      1.06%     89.58% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::18         1838      4.39%     93.97% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::19          758      1.81%     95.78% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::20          409      0.98%     96.75% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::21          368      0.88%     97.63% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::22          278      0.66%     98.30% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::23          202      0.48%     98.78% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::24          177      0.42%     99.20% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::25           96      0.23%     99.43% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::26           43      0.10%     99.53% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::27           31      0.07%     99.61% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::28           24      0.06%     99.66% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::29           14      0.03%     99.70% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::30           15      0.04%     99.73% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::31           14      0.03%     99.77% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::32           13      0.03%     99.80% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::33           18      0.04%     99.84% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::34           12      0.03%     99.87% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::35            3      0.01%     99.88% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::36            5      0.01%     99.89% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::37            4      0.01%     99.90% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::38            1      0.00%     99.90% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::39            6      0.01%     99.91% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::40            4      0.01%     99.92% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::41            5      0.01%     99.94% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::42            3      0.01%     99.94% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::43            1      0.00%     99.95% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::44            2      0.00%     99.95% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::45            3      0.01%     99.96% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::46            2      0.00%     99.96% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::47            3      0.01%     99.97% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::50            1      0.00%     99.97% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::51            1      0.00%     99.97% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::52            2      0.00%     99.98% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::53            1      0.00%     99.98% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::54            1      0.00%     99.98% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::55            2      0.00%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::59            1      0.00%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::60            1      0.00%     99.99% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::61            1      0.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::64            1      0.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::79            1      0.00%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total        41902                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ            3861504                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys         8831351360                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys        44493440                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         3602217631.47897243                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         18148417.78112108                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap             2451642863768                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 17677.77                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l1dcaches.prefetcher    154390528                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2cache.prefetcher   8461106560                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst       273088                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data    211719680                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::writebacks     44135488                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l1dcaches.prefetcher 62974312.698498271406                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2cache.prefetcher 3451198575.373452186584                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 111389.793978860514                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 86358285.741117432714                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::writebacks 18002412.832041211426                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l1dcaches.prefetcher      2417278                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2cache.prefetcher    132224644                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst         4267                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data      3343676                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::writebacks       695210                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l1dcaches.prefetcher 170273052237                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2cache.prefetcher 4748979328883                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst    156611759                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data 204222756066                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::writebacks 137666452710249                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l1dcaches.prefetcher     70440.00                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2cache.prefetcher     35915.99                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     36703.01                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     61077.32                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::writebacks 198021393.12                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l1dcaches.prefetcher    154705792                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2cache.prefetcher   8462377216                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst       273088                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data    213995264                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total   8831351360                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst       273088                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total       273088                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::writebacks     44493440                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total     44493440                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l1dcaches.prefetcher      2417278                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2cache.prefetcher    132224644                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst         4267                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data      3343676                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total    137989865                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::writebacks       695210                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total       695210                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l1dcaches.prefetcher     63102906                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2cache.prefetcher   3451716863                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst       111390                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data     87286473                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total   3602217631                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst       111390                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total       111390                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::writebacks     18148418                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total     18148418                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::writebacks     18148418                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l1dcaches.prefetcher     63102906                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2cache.prefetcher   3451716863                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst       111390                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data     87286473                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total   3620366049                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts       137929529                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts         689617                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0      4276495                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1      4240006                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2      4407504                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3      4411469                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4      4356814                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5      4260865                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6      4269807                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7      4377206                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8      4450990                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9      4124935                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10      4000252                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11      4217307                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12      4234353                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13      4256005                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14      4521576                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15      4377514                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::16      4365170                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::17      4216506                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::18      4262943                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::19      4329104                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::20      4374907                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::21      4354537                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::22      4237343                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::23      4186180                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::24      4466656                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::25      4492730                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::26      4369268                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::27      4363292                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::28      4264183                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::29      4319676                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::30      4346020                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::31      4197916                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0         9703                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1         9778                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2         9895                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3        12785                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4        10247                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5         9846                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6        11562                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7        14884                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8        27351                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9        17195                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10        24014                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11        20473                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12        18904                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13         9849                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14        17617                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15        16633                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::16        80304                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::17        69205                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::18        76184                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::19        41098                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::20        12863                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::21        24877                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::22         9854                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::23         9860                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::24         9793                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::25        20498                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::26         9846                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::27         9789                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::28        30590                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::29         9659                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::30        16711                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::31        17750                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat       2710968427677                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat     459581190628                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat  5123631748945                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           19654.74                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      37146.74                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits      128348319                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits        556317                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        93.05                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        80.67                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples      9714494                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   913.235600                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   813.990159                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   265.570370                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127       350132      3.60%      3.60% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255       287576      2.96%      6.56% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383       205838      2.12%      8.68% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511       177393      1.83%     10.51% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639       209718      2.16%     12.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767       215144      2.21%     14.88% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895       173909      1.79%     16.67% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023       157252      1.62%     18.29% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151      7937532     81.71%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total      9714494                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead   8827489856                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten     44135488                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        3600.642564                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW          18.002413                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil              18.84                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead          18.75                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.09                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          92.99                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy 7467086010.384329                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy 13182251235.498270                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy 188665324583.633057                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy 567909705.215974                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 212816098879.798798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy 660831636649.262939                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy 344007607205.645020                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy 1427537914272.726562                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   582.278072                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE 1036595192301                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF 110209400000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT 1304838329777                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy 7681487735.376022                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy 13560763753.903986                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy 189661911541.340515                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy 1058935416.336241                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 212816098879.798798                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy 682428614801.139038                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy 329098018227.754761                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy 1436305830358.787598                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   585.854415                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE 991735914752                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF 110209400000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT 1349697607326                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles       2943148768                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.253588                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               3.943410                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded     11914370362                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded       612514                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued    11796395497                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued       529509                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined    307143977                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined    204886419                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved       599908                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples   2943004173                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     4.008284                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     2.907365                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0    573019382     19.47%     19.47% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1    258905742      8.80%     28.27% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2    195595541      6.65%     34.91% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3    278581056      9.47%     44.38% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4    332090437     11.28%     55.66% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5    195841407      6.65%     62.32% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6    229695638      7.80%     70.12% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7    409386866     13.91%     84.03% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8    469888104     15.97%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            8                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total   2943004173                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu      1218210      1.10%      1.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult           99      0.00%      1.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv          163      0.00%      1.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      1.10% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp         2741      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt           25      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult           28      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc          978      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc         1443      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      1.11% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc      7640451      6.92%      8.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      8.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      8.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      8.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      8.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      8.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      8.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      8.02% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd     75034785     67.93%     75.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%     75.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%     75.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%     75.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%     75.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%     75.95% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult     10916403      9.88%     85.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%     85.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%     85.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%     85.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%     85.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%     85.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%     85.83% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd     12107935     10.96%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%     96.79% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead      2367399      2.14%     98.94% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite       530601      0.48%     99.42% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead       427568      0.39%     99.81% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite        33394      0.03%     99.84% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%     99.84% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%     99.84% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad       120916      0.11%     99.94% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore        44208      0.04%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%     99.98% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig        16885      0.02%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass        10596      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu   5031745445     42.65%     42.66% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult      2266107      0.02%     42.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv         4339      0.00%     42.67% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd    944205150      8.00%     50.68% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp      9488292      0.08%     50.76% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt      1714060      0.01%     50.77% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult         3152      0.00%     50.77% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc         9452      0.00%     50.77% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv         1016      0.00%     50.77% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc      4263978      0.04%     50.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     50.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd           23      0.00%     50.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     50.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     50.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     50.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     50.81% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc    945613010      8.02%     58.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult           22      0.00%     58.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     58.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     58.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     58.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     58.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     58.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     58.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd    944221859      8.00%     66.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     66.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     66.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     66.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     66.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     66.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult    944220346      8.00%     74.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     74.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     74.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     74.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     74.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     74.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     74.83% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd    944210697      8.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     82.84% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead     58747095      0.50%     83.34% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite     30548490      0.26%     83.60% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead     20371638      0.17%     83.77% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite     14137646      0.12%     83.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%     83.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%     83.89% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad   1894585848     16.06%     99.95% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore      2334321      0.02%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%     99.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig      3692915      0.03%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total  11796395497                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         4.008087                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy           110464232                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.009364                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads  13194283214                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites   5445114392                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses   5104876933                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads   3884889113                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites   2011981375                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses   1933427342                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads   9567616581                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites   4765225794                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses   4730671952                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses   5127427948                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses   1946480823                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses   4832940362                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts     12373975                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled            4844                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles          144595                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads   1989239518                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores     64682336                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads     13532136                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores     24828192                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return      5320210      0.50%      0.50% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect      4956494      0.46%      0.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect      1898884      0.18%      1.13% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond   1047730674     97.53%     98.66% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond     10891636      1.01%     99.68% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     99.68% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond      3490101      0.32%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total   1074287999                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return      2622335      3.12%      3.12% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect      3181049      3.78%      6.90% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect       976447      1.16%      8.06% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond     68247321     81.14%     89.20% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond      7576965      9.01%     98.21% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     98.21% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond      1508040      1.79%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total     84112157                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return        11988      0.08%      0.08% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect        45730      0.29%      0.36% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect         5010      0.03%      0.39% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond     15820483     99.31%     99.70% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond        47371      0.30%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond          241      0.00%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total     15930823                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return      2697874      0.27%      0.27% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect      1775444      0.18%      0.45% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect       922435      0.09%      0.54% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond    979483343     98.92%     99.47% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond      3314671      0.33%     99.80% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     99.80% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond      1982061      0.20%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total    990175828                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return         7634      0.10%      0.10% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect        11235      0.15%      0.25% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect         3844      0.05%      0.30% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond      7448537     99.51%     99.81% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond        13769      0.18%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond          199      0.00%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total      7485218                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget     34079903      3.17%      3.17% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB   1029672918     95.85%     99.02% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS      5320210      0.50%     99.51% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect      5214968      0.49%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total   1074287999                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch      1720236     10.89%     10.89% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return     14079844     89.11%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect          102      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            1      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total     15800183                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted   1047730674                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken   1015402012                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect     15930823                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss        42289                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted     12256656                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted      3674167                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups   1074287999                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates     12239417                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits   1049149508                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.976600                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted        50567                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups      5388985                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits      5214968                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses       174017                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return      5320210      0.50%      0.50% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect      4956494      0.46%      0.96% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect      1898884      0.18%      1.13% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond   1047730674     97.53%     98.66% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond     10891636      1.01%     99.68% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     99.68% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond      3490101      0.32%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total   1074287999                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return      5308892     21.12%     21.12% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect       137042      0.55%     21.66% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect      1898858      7.55%     29.22% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond     14268522     56.76%     85.98% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond        35076      0.14%     86.12% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     86.12% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond      3490101     13.88%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total     25138491                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect        45730      0.37%      0.37% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      0.37% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond     12146316     99.24%     99.61% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond        47371      0.39%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total     12239417                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect        45730      0.37%      0.37% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      0.37% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond     12146316     99.24%     99.61% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond        47371      0.39%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total     12239417                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups      5388985                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits      5214968                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses       174017                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords         5251                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords      5394236                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows           10                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes      9477713                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops      9477706                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes      6779831                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used      2697874                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct      2690240                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect         7634                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts    307409015                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls        12606                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts     10535671                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples   2894638141                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     4.010117                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     3.203917                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0    829848224     28.67%     28.67% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1    131981652      4.56%     33.23% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2     23805752      0.82%     34.05% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3     19475338      0.67%     34.72% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4    917179013     31.69%     66.41% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5     15230503      0.53%     66.93% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6     14360737      0.50%     67.43% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7      3268637      0.11%     67.54% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8    939488285     32.46%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            8                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total   2894638141                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars        10485                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls      2697879                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass        10522      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu   4896289583     42.18%     42.18% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult      1862116      0.02%     42.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv         4088      0.00%     42.20% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd    944190393      8.13%     50.33% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp      8123497      0.07%     50.40% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt      1162233      0.01%     50.41% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult         3133      0.00%     50.41% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc         9442      0.00%     50.41% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv         1012      0.00%     50.41% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc      3062445      0.03%     50.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     50.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd           23      0.00%     50.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     50.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     50.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     50.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     50.44% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc    945111549      8.14%     58.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult           21      0.00%     58.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     58.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     58.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     58.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     58.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     58.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     58.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd    944184320      8.13%     66.71% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     66.71% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     66.71% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     66.71% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     66.71% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     66.71% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult    944184320      8.13%     74.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     74.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     74.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     74.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     74.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     74.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     74.85% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd    944184320      8.13%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     82.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead     37385623      0.32%     83.30% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite     20937837      0.18%     83.48% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead     12885776      0.11%     83.60% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite      9757386      0.08%     83.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%     83.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%     83.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad   1889394755     16.28%     99.96% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore      2193528      0.02%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%     99.98% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig      2900976      0.02%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total  11607838898                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples    939488285                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts  11606041895                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps  11607838898                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP  11606041895                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP  11607838898                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.253588                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     3.943410                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs   1972554905                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts   1923379637                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts   4990022886                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts   1939664137                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts     32888751                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts   5672153812                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass        10522      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu   4896289583     42.18%     42.18% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult      1862116      0.02%     42.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv         4088      0.00%     42.20% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd    944190393      8.13%     50.33% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp      8123497      0.07%     50.40% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt      1162233      0.01%     50.41% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult         3133      0.00%     50.41% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc         9442      0.00%     50.41% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv         1012      0.00%     50.41% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc      3062445      0.03%     50.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     50.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd           23      0.00%     50.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     50.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     50.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     50.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     50.44% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc    945111549      8.14%     58.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult           21      0.00%     58.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     58.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     58.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     58.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     58.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     58.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     58.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd    944184320      8.13%     66.71% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     66.71% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     66.71% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     66.71% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     66.71% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     66.71% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult    944184320      8.13%     74.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     74.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     74.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     74.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     74.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     74.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     74.85% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd    944184320      8.13%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     82.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead     37385623      0.32%     83.30% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite     20937837      0.18%     83.48% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead     12885776      0.11%     83.60% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite      9757386      0.08%     83.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%     83.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%     83.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad   1889394755     16.28%     99.96% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore      2193528      0.02%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%     99.98% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig      2900976      0.02%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total  11607838898                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl    990175828                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl    984573458                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl      5602370                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl    979483343                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl     10692485                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall      2697879                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn      2697874                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles    220337309                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles   1148135909                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles   1149076209                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles    414807090                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles     10647656                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved   1013855954                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred      5619400                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts  12027482238                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts     36356733                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts  11784021522                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches   1012965935                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts   1970156699                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     45248959                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     4.003882                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numFpRegReads   1929702808                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites   1911028960                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads  10927043055                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites   4082436807                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs   2015405658                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads  17069321540                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites  11373470638                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numVecRegReads   6611841550                       # Number of times the vector registers were read (Count)
board.processor.cores.core.executeStats0.numVecRegWrites   4725214610                       # Number of times the vector registers were written (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches   1040208096                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles    2913504963                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles     32085662                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.miscStallCycles           36                       # Number of cycles fetch has spent waiting on interrupts, or bad addresses, or out of MSHRs (Cycle)
board.processor.cores.core.fetch.pendingTrapStallCycles          247                       # Number of stall cycles due to pending traps (Cycle)
board.processor.cores.core.fetch.cacheLines    105309281                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         6204                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples   2943004173                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     4.150281                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     3.212360                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0    869477230     29.54%     29.54% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1     22380266      0.76%     30.30% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2     31853512      1.08%     31.39% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3     17584051      0.60%     31.98% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4    970794826     32.99%     64.97% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5      6268814      0.21%     65.18% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6     15523887      0.53%     65.71% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7      5184424      0.18%     65.89% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8   1003937163     34.11%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total   2943004173                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts  12211761046                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     4.149216                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches   1074287999                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.365013                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles     13456096                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles     10647656                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles    300729635                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles     18520025                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts  11914982876                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts     11298362                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts   1989239518                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts     64682336                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts       355429                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents      6416732                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents      2451881                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents       201062                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect      9264535                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect      2015524                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts     11280059                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit  11771565968                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount  11768976227                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst   8879926759                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst  11303223784                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        3.998770                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.785610                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads      5581045                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads     49575381                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses        47194                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation       201062                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores     31791568                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads         1972                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache        12211                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples   1939664137                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     7.879834                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    21.643891                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9   1676173054     86.42%     86.42% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19     25039215      1.29%     87.71% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29     66132077      3.41%     91.12% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39    125865587      6.49%     97.61% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49     17255377      0.89%     98.49% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59      1911295      0.10%     98.59% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69      2196493      0.11%     98.71% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79      2177659      0.11%     98.82% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89      1149314      0.06%     98.88% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99      1084522      0.06%     98.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109      1044050      0.05%     98.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119      1864362      0.10%     99.08% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129      2564913      0.13%     99.22% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139     10015646      0.52%     99.73% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149      1338345      0.07%     99.80% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159      1649893      0.09%     99.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169       115001      0.01%     99.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179        19780      0.00%     99.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189        15301      0.00%     99.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199        10581      0.00%     99.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209         8895      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219         6420      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229         6542      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239         4932      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249         4636      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259         4054      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269         4051      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279         4302      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289         4190      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299         4451      0.00%     99.90% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows      1989199      0.10%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          734                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total   1939664137                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.dtb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.dtb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.itb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.itb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 2451642922078                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles     10647656                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles    423754681                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles    488901642                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles     22300133                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles   1351739206                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles    645660855                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts  11980411820                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents    159150020                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents    294240942                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents     20625149                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents      5862210                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands  10875675463                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups  19773092742                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups  11141621581                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups   1970162319                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.vecLookups   6639128790                       # Number of vector rename lookups (Count)
board.processor.cores.core.rename.committedMaps  10590540959                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps    285134504                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing       424047                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing       447007                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts   2223437288                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads      13870336110                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes     23879166146                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts  11606041895                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps  11607838898                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls           47                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
